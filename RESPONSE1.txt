{
    "sha": "9256ec8780a8a65f32433ff05989b5ac10915ed0",
    "node_id": "C_kwDOHUtsy9oAKDkyNTZlYzg3ODBhOGE2NWYzMjQzM2ZmMDU5ODliNWFjMTA5MTVlZDA",
    "commit": {
        "author": {
            "name": "Balaji Natarajan",
            "email": "balaji.natarajan.7@gmail.com",
            "date": "2022-05-12T11:31:37Z"
        },
        "committer": {
            "name": "Balaji Natarajan",
            "email": "balaji.natarajan.7@gmail.com",
            "date": "2022-05-12T11:31:37Z"
        },
        "message": "assessment - star wars",
        "tree": {
            "sha": "60785383eb5b2ad24dd79eb05204ec8ef9ef57e9",
            "url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/git/trees/60785383eb5b2ad24dd79eb05204ec8ef9ef57e9"
        },
        "url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/git/commits/9256ec8780a8a65f32433ff05989b5ac10915ed0",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
        }
    },
    "url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/commits/9256ec8780a8a65f32433ff05989b5ac10915ed0",
    "html_url": "https://github.com/NBALAJI95/starwars-universe-app/commit/9256ec8780a8a65f32433ff05989b5ac10915ed0",
    "comments_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/commits/9256ec8780a8a65f32433ff05989b5ac10915ed0/comments",
    "author": {
        "login": "NBALAJI95",
        "id": 21211581,
        "node_id": "MDQ6VXNlcjIxMjExNTgx",
        "avatar_url": "https://avatars.githubusercontent.com/u/21211581?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NBALAJI95",
        "html_url": "https://github.com/NBALAJI95",
        "followers_url": "https://api.github.com/users/NBALAJI95/followers",
        "following_url": "https://api.github.com/users/NBALAJI95/following{/other_user}",
        "gists_url": "https://api.github.com/users/NBALAJI95/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/NBALAJI95/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/NBALAJI95/subscriptions",
        "organizations_url": "https://api.github.com/users/NBALAJI95/orgs",
        "repos_url": "https://api.github.com/users/NBALAJI95/repos",
        "events_url": "https://api.github.com/users/NBALAJI95/events{/privacy}",
        "received_events_url": "https://api.github.com/users/NBALAJI95/received_events",
        "type": "User",
        "site_admin": false
    },
    "committer": {
        "login": "NBALAJI95",
        "id": 21211581,
        "node_id": "MDQ6VXNlcjIxMjExNTgx",
        "avatar_url": "https://avatars.githubusercontent.com/u/21211581?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NBALAJI95",
        "html_url": "https://github.com/NBALAJI95",
        "followers_url": "https://api.github.com/users/NBALAJI95/followers",
        "following_url": "https://api.github.com/users/NBALAJI95/following{/other_user}",
        "gists_url": "https://api.github.com/users/NBALAJI95/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/NBALAJI95/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/NBALAJI95/subscriptions",
        "organizations_url": "https://api.github.com/users/NBALAJI95/orgs",
        "repos_url": "https://api.github.com/users/NBALAJI95/repos",
        "events_url": "https://api.github.com/users/NBALAJI95/events{/privacy}",
        "received_events_url": "https://api.github.com/users/NBALAJI95/received_events",
        "type": "User",
        "site_admin": false
    },
    "parents": [],
    "stats": {
        "total": 31620,
        "additions": 31620,
        "deletions": 0
    },
    "files": [
        {
            "sha": "898ca34234d6493076bd31da7c7ccfb74424cafa",
            "filename": ".gitignore",
            "status": "added",
            "additions": 27,
            "deletions": 0,
            "changes": 27,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/.gitignore",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/.gitignore",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/.gitignore?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,27 @@\n+# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n+\n+# dependencies\n+/node_modules\n+/.pnp\n+.pnp.js\n+\n+# testing\n+/coverage\n+\n+# production\n+/build\n+\n+# misc\n+.DS_Store\n+.env.local\n+.env.development.local\n+.env.test.local\n+.env.production.local\n+\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n+\n+.idea/inspectionProfiles/\n+.idea/vcs.xml\n+"
        },
        {
            "sha": "b58b603fea78041071d125a30db58d79b3d49217",
            "filename": ".idea/.gitignore",
            "status": "added",
            "additions": 5,
            "deletions": 0,
            "changes": 5,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/.idea%2F.gitignore",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/.idea%2F.gitignore",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/.idea%2F.gitignore?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,5 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml\n+# Editor-based HTTP Client requests\n+/httpRequests/"
        },
        {
            "sha": "b12a615423baf6ffa0b9f296b742701a20ec73cc",
            "filename": ".idea/modules.xml",
            "status": "added",
            "additions": 8,
            "deletions": 0,
            "changes": 8,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/.idea%2Fmodules.xml",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/.idea%2Fmodules.xml",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/.idea%2Fmodules.xml?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectModuleManager\">\n+    <modules>\n+      <module fileurl=\"file://$PROJECT_DIR$/.idea/star_wars_universe.iml\" filepath=\"$PROJECT_DIR$/.idea/star_wars_universe.iml\" />\n+    </modules>\n+  </component>\n+</project>\n\\ No newline at end of file"
        },
        {
            "sha": "639b18bf5c8fce746fd247da47bb655b807591d2",
            "filename": ".idea/star_wars_universe.iml",
            "status": "added",
            "additions": 13,
            "deletions": 0,
            "changes": 13,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/.idea%2Fstar_wars_universe.iml",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/.idea%2Fstar_wars_universe.iml",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/.idea%2Fstar_wars_universe.iml?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"WEB_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\">\n+    <content url=\"file://$MODULE_DIR$\">\n+      <excludeFolder url=\"file://$MODULE_DIR$/temp\" />\n+      <excludeFolder url=\"file://$MODULE_DIR$/.tmp\" />\n+      <excludeFolder url=\"file://$MODULE_DIR$/tmp\" />\n+      <excludeFolder url=\"file://$MODULE_DIR$/build\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+  </component>\n+</module>\n\\ No newline at end of file"
        },
        {
            "sha": "f0ecd352d7593a960c232785cba59be27c8ef030",
            "filename": "README.md",
            "status": "added",
            "additions": 58,
            "deletions": 0,
            "changes": 58,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/README.md",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/README.md",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/README.md?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,58 @@\n+# Things I missed (because of time)\n+\n+1. I am rendering Home planet URL instead of planet name as I ran into rate limiting from API side (Setting  isFetchable to true in App.tsx{ field: CharacterFields.homeworld, headerName: 'Home World', isFetchable: false } will render the intended logic which is the only piece I skipped unit testing because of time constraints)\n+2. I would also cache API responses to save network calls for the above\n+3. I am using favoritesNamesSet: Set<string> and favoritesList: Array<ICharacter> for managing favorites because I want to maintain the order as well to check for a favorite character in constant time O(1)\n+4. With additional time I would have use useContent instead of props drilling\n+5. I did not give much importance for styling, sorry about that\n+\n+# For large Teams\n+\n+I would consider micro frontend architecture\n+\n+# Getting Started with Create React App\n+\n+This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n+\n+## Available Scripts\n+\n+In the project directory, you can run:\n+\n+### `npm start`\n+\n+Runs the app in the development mode.\\\n+Open [http://localhost:3000](http://localhost:3000) to view it in the browser.\n+\n+The page will reload if you make edits.\\\n+You will also see any lint errors in the console.\n+\n+### `npm test`\n+\n+Launches the test runner in the interactive watch mode.\\\n+See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n+\n+### `npm run build`\n+\n+Builds the app for production to the `build` folder.\\\n+It correctly bundles React in production mode and optimizes the build for the best performance.\n+\n+The build is minified and the filenames include the hashes.\\\n+Your app is ready to be deployed!\n+\n+See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n+\n+### `npm run eject`\n+\n+**Note: this is a one-way operation. Once you `eject`, you can’t go back!**\n+\n+If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n+\n+Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.\n+\n+You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.\n+\n+## Learn More\n+\n+You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n+\n+To learn React, check out the [React documentation](https://reactjs.org/)."
        },
        {
            "sha": "c4b95e71433c688d0d9cd2a475e050eb23440376",
            "filename": "package-lock.json",
            "status": "added",
            "additions": 28732,
            "deletions": 0,
            "changes": 28732,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/package-lock.json",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/package-lock.json",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/package-lock.json?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0"
        },
        {
            "sha": "be8a7346a77cf2bad672d99eac52e6640370cff9",
            "filename": "package.json",
            "status": "added",
            "additions": 52,
            "deletions": 0,
            "changes": 52,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/package.json",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/package.json",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/package.json?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,52 @@\n+{\n+  \"name\": \"star_wars_universe\",\n+  \"version\": \"0.1.0\",\n+  \"private\": true,\n+  \"dependencies\": {\n+    \"@emotion/react\": \"^11.9.0\",\n+    \"@emotion/styled\": \"^11.8.1\",\n+    \"@mui/icons-material\": \"^5.6.2\",\n+    \"@mui/material\": \"^5.6.4\",\n+    \"@testing-library/jest-dom\": \"^5.16.4\",\n+    \"@testing-library/react\": \"^13.2.0\",\n+    \"@testing-library/user-event\": \"^13.5.0\",\n+    \"@types/jest\": \"^27.5.0\",\n+    \"@types/node\": \"^16.11.33\",\n+    \"@types/react\": \"^18.0.9\",\n+    \"@types/react-dom\": \"^18.0.3\",\n+    \"lodash\": \"^4.17.21\",\n+    \"react\": \"^18.1.0\",\n+    \"react-dom\": \"^18.1.0\",\n+    \"react-router-dom\": \"^6.3.0\",\n+    \"react-scripts\": \"5.0.1\",\n+    \"typescript\": \"^4.6.4\",\n+    \"web-vitals\": \"^2.1.4\"\n+  },\n+  \"scripts\": {\n+    \"start\": \"react-scripts start\",\n+    \"build\": \"react-scripts build\",\n+    \"test\": \"react-scripts test\",\n+    \"eject\": \"react-scripts eject\"\n+  },\n+  \"eslintConfig\": {\n+    \"extends\": [\n+      \"react-app\",\n+      \"react-app/jest\"\n+    ]\n+  },\n+  \"browserslist\": {\n+    \"production\": [\n+      \">0.2%\",\n+      \"not dead\",\n+      \"not op_mini all\"\n+    ],\n+    \"development\": [\n+      \"last 1 chrome version\",\n+      \"last 1 firefox version\",\n+      \"last 1 safari version\"\n+    ]\n+  },\n+  \"devDependencies\": {\n+    \"@types/lodash\": \"^4.14.182\"\n+  }\n+}"
        },
        {
            "sha": "a11777cc471a4344702741ab1c8a588998b1311a",
            "filename": "public/favicon.ico",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Ffavicon.ico",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Ffavicon.ico",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/public%2Ffavicon.ico?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0"
        },
        {
            "sha": "26eb215262566a4c1f9c25cbd1c31420e4b21d90",
            "filename": "public/index.html",
            "status": "added",
            "additions": 43,
            "deletions": 0,
            "changes": 43,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Findex.html",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Findex.html",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/public%2Findex.html?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,43 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+  <head>\n+    <meta charset=\"utf-8\" />\n+    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n+    <meta name=\"theme-color\" content=\"#000000\" />\n+    <meta\n+      name=\"description\"\n+      content=\"Web site created using create-react-app\"\n+    />\n+    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n+    <!--\n+      manifest.json provides metadata used when your web app is installed on a\n+      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n+    -->\n+    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n+    <!--\n+      Notice the use of %PUBLIC_URL% in the tags above.\n+      It will be replaced with the URL of the `public` folder during the build.\n+      Only files inside the `public` folder can be referenced from the HTML.\n+\n+      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n+      work correctly both with client-side routing and a non-root public URL.\n+      Learn how to configure a non-root public URL by running `npm run build`.\n+    -->\n+    <title>StarWars Universe</title>\n+  </head>\n+  <body>\n+    <noscript>You need to enable JavaScript to run this app.</noscript>\n+    <div id=\"root\"></div>\n+    <!--\n+      This HTML file is a template.\n+      If you open it directly in the browser, you will see an empty page.\n+\n+      You can add webfonts, meta tags, or analytics to this file.\n+      The build step will place the bundled scripts into the <body> tag.\n+\n+      To begin the development, run `npm start` or `yarn start`.\n+      To create a production bundle, use `npm run build` or `yarn build`.\n+    -->\n+  </body>\n+</html>"
        },
        {
            "sha": "fc44b0a3796c0e0a64c3d858ca038bd4570465d9",
            "filename": "public/logo192.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Flogo192.png",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Flogo192.png",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/public%2Flogo192.png?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0"
        },
        {
            "sha": "a4e47a6545bc15971f8f63fba70e4013df88a664",
            "filename": "public/logo512.png",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Flogo512.png",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Flogo512.png",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/public%2Flogo512.png?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0"
        },
        {
            "sha": "080d6c77ac21bb2ef88a6992b2b73ad93daaca92",
            "filename": "public/manifest.json",
            "status": "added",
            "additions": 25,
            "deletions": 0,
            "changes": 25,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Fmanifest.json",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Fmanifest.json",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/public%2Fmanifest.json?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,25 @@\n+{\n+  \"short_name\": \"React App\",\n+  \"name\": \"Create React App Sample\",\n+  \"icons\": [\n+    {\n+      \"src\": \"favicon.ico\",\n+      \"sizes\": \"64x64 32x32 24x24 16x16\",\n+      \"type\": \"image/x-icon\"\n+    },\n+    {\n+      \"src\": \"logo192.png\",\n+      \"type\": \"image/png\",\n+      \"sizes\": \"192x192\"\n+    },\n+    {\n+      \"src\": \"logo512.png\",\n+      \"type\": \"image/png\",\n+      \"sizes\": \"512x512\"\n+    }\n+  ],\n+  \"start_url\": \".\",\n+  \"display\": \"standalone\",\n+  \"theme_color\": \"#000000\",\n+  \"background_color\": \"#ffffff\"\n+}"
        },
        {
            "sha": "e9e57dc4d41b9b46e05112e9f45b7ea6ac0ba15e",
            "filename": "public/robots.txt",
            "status": "added",
            "additions": 3,
            "deletions": 0,
            "changes": 3,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Frobots.txt",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/public%2Frobots.txt",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/public%2Frobots.txt?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,3 @@\n+# https://www.robotstxt.org/robotstxt.html\n+User-agent: *\n+Disallow:"
        },
        {
            "sha": "293dc13937fe0c3820ab62cd79d435bfb05beaf1",
            "filename": "src/App.css",
            "status": "added",
            "additions": 12,
            "deletions": 0,
            "changes": 12,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FApp.css",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FApp.css",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FApp.css?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,12 @@\n+.Container {\n+  text-align: center;\n+  /*background-color: #282c34;*/\n+  min-height: 100vh;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  justify-content: center;\n+  font-size: calc(10px + 2vmin);\n+  /*color: white;*/\n+}\n+"
        },
        {
            "sha": "cc0ed7b2545ac242c7d0879ac701233f600a0164",
            "filename": "src/App.test.tsx",
            "status": "added",
            "additions": 102,
            "deletions": 0,
            "changes": 102,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FApp.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FApp.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FApp.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,102 @@\n+import React from 'react';\n+import {act, render, screen} from '@testing-library/react';\n+import { CHARACTER_RESPONSE_PAGE_1 } from './testResponse';\n+import App, {ViewOptions} from './App';\n+import { BrowserRouter } from \"react-router-dom\";\n+\n+describe('Testing App components rendering', () => {\n+    beforeEach(() => {\n+        render(\n+            <BrowserRouter>\n+                <App\n+                    viewState={[ViewOptions.CHARACTER_LIST_VIEW, jest.fn()]}\n+                    favoritesState={[{favoritesNamesSet: new Set(), favoritesList: []}, jest.fn()]}\n+                />\n+            </BrowserRouter>\n+        );\n+    });\n+\n+    test('renders app container', () => {\n+        expect(screen.getByTestId('app-container')).toBeVisible();\n+    });\n+\n+    test('renders view options container', () => {\n+        expect(screen.getByTestId(\"view-options-parent-container\")).toBeVisible();\n+    });\n+});\n+\n+describe('Testing App components rendering - characters list', () => {\n+    beforeEach(() => {\n+        render(\n+            <BrowserRouter>\n+                <App\n+                    viewState={[ViewOptions.CHARACTER_LIST_VIEW, jest.fn()]}\n+                    favoritesState={[{favoritesNamesSet: new Set(), favoritesList: []}, jest.fn()]}\n+                />\n+            </BrowserRouter>\n+        );\n+    });\n+\n+    test('characters container is rendered when CHARACTER_LIST_VIEW is selected', () => {\n+        expect(screen.getByTestId(\"characters-container\")).toBeVisible();\n+    });\n+\n+    test('renders app heading', () => {\n+      expect(screen.getByRole('title')).toBeVisible();\n+    });\n+\n+    test('renders characters table', () => {\n+        expect(screen.getByTestId('characters-table-wrapper')).toBeVisible();\n+    });\n+\n+    test('renders characters table pagination', () => {\n+        expect(screen.getByTestId('characters-table-pagination-wrapper')).toBeVisible();\n+    });\n+})\n+\n+describe('Testing App components rendering - favorites list', () => {\n+    test('renders favorites container', () => {\n+        render(\n+            <BrowserRouter>\n+                <App\n+                    viewState={[ViewOptions.FAVORITES_VIEW, jest.fn()]}\n+                    favoritesState={[{favoritesNamesSet: new Set(), favoritesList: []}, jest.fn()]}\n+                />\n+            </BrowserRouter>\n+        );\n+        expect(screen.getByTestId(\"favorites-container\")).toBeVisible();\n+    });\n+});\n+\n+describe('Testing Characters fetching on initial render', () => {\n+  let originFetch: any;\n+\n+  beforeEach( () => {\n+    originFetch = (global as any).fetch;\n+  });\n+\n+  afterEach(() => {\n+    (global as any).fetch = originFetch;\n+  });\n+\n+  it('should call fetch api with given URL', async () => {\n+    const fakeResponse = CHARACTER_RESPONSE_PAGE_1;\n+    const mRes = { json: jest.fn().mockResolvedValueOnce(fakeResponse) };\n+    const mockedFetch = jest.fn().mockResolvedValueOnce(mRes as any);\n+    (global as any).fetch = mockedFetch;\n+\n+      await act(async () => {\n+          render(\n+              <BrowserRouter>\n+                  <App\n+                      viewState={[ViewOptions.CHARACTER_LIST_VIEW, jest.fn()]}\n+                      favoritesState={[{favoritesNamesSet: new Set(), favoritesList: []}, jest.fn()]}\n+                  />\n+              </BrowserRouter>\n+          );\n+      });\n+\n+    expect(mockedFetch).toBeCalledTimes(1);\n+    expect(mockedFetch).toBeCalledWith('https://swapi.dev/api/people');\n+  });\n+});"
        },
        {
            "sha": "2475fcfdd091935084a1dfae4470fb5da23d872f",
            "filename": "src/App.tsx",
            "status": "added",
            "additions": 156,
            "deletions": 0,
            "changes": 156,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FApp.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FApp.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FApp.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,156 @@\n+import React, { useState, useEffect} from 'react';\n+import {useNavigate} from 'react-router-dom';\n+import Table from './Table/Table';\n+import './App.css';\n+import TablePagination from \"./TablePagination/TablePagination\";\n+import Favorites from \"./Favorites\";\n+import ViewOptionsInput from \"./ViewOptionsInput\";\n+import {IFavoritesState} from \"./Router\";\n+\n+export enum CharacterFields {\n+    name = 'name',\n+    gender = 'gender',\n+    homeworld = 'homeworld',\n+    hair_color = 'hair_color',\n+    eye_color = 'eye_color',\n+    films = 'films',\n+    starships = 'starships'\n+}\n+\n+export interface ICharacter {\n+    [CharacterFields.name]: string;\n+    [CharacterFields.gender]: string;\n+    [CharacterFields.homeworld]: string;\n+    [CharacterFields.hair_color]: string;\n+    [CharacterFields.eye_color]: string;\n+    [CharacterFields.films]: string[];\n+    [CharacterFields.starships]: string[];\n+    height?: string;\n+    mass?: string;\n+    skin_color?: string;\n+    birth_year?: string;\n+    species?: string[];\n+    vehicles?: string[];\n+    created?: string;\n+    edited?: string;\n+    url?: string;\n+}\n+\n+export interface ITableColumn {\n+    field: CharacterFields;\n+    headerName: string;\n+    isFetchable?: boolean;\n+}\n+\n+export interface ICharactersResponse {\n+    count: number;\n+    results: ICharacter[];\n+    previous: null | string;\n+    next: null | string;\n+}\n+\n+export const cols: ITableColumn[] = [\n+    { field: CharacterFields.name, headerName: 'Name' },\n+    { field: CharacterFields.gender, headerName: 'Gender' },\n+    { field: CharacterFields.homeworld, headerName: 'Home World', isFetchable: false },\n+];\n+\n+export const calculatePage = (previous: null | string, next: null | string) => {\n+    let page = 1;\n+\n+    if (previous !== null) {\n+        page = (parseInt(previous[previous.length - 1]) + 1);\n+    } else if (next !== null) {\n+        page = (parseInt(next[next.length - 1]) - 1);\n+    }\n+\n+    return page;\n+};\n+\n+export enum ViewOptions {\n+    CHARACTER_LIST_VIEW = \"CHARACTER_LIST_VIEW\",\n+    FAVORITES_VIEW = \"FAVORITES_VIEW\"\n+}\n+\n+interface IAppProps {\n+    favoritesState: [IFavoritesState, React.Dispatch<React.SetStateAction<IFavoritesState>>];\n+    viewState: [ViewOptions, React.Dispatch<React.SetStateAction<ViewOptions>>]\n+}\n+\n+function App({ favoritesState, viewState }: IAppProps) {\n+    let page = 1;\n+    const [url, setURL] = useState<string>('https://swapi.dev/api/people');\n+    const [favorites, setFavorites] = favoritesState;\n+    // const [view, setView] = useState<ViewOptions>(ViewOptions.CHARACTER_LIST_VIEW);\n+    const [view, setView] = viewState;\n+    const [tableData, setTableData] = useState<ICharactersResponse>(\n+        { count: 0, results: [], previous: null, next: null }\n+    );\n+    const [search, setSearch] = useState<string>('');\n+    const {next, previous} = tableData;\n+    const navigate = useNavigate();\n+\n+    page = calculatePage(previous, next);\n+\n+    if (next !== null) {\n+        page = (parseInt(next[next.length - 1]) - 1);\n+    } else if (previous !== null) {\n+        page = (parseInt(previous[previous.length - 1]) + 1);\n+    }\n+\n+    const getCharactersData = (): Promise<any> => fetch(url);\n+\n+    useEffect(() => {\n+        (async () => {\n+            const data = await getCharactersData();\n+            setTableData(await data.json());\n+        })();\n+    }, [url]);\n+\n+    return (\n+        <div data-testid=\"app-container\" className=\"Container\">\n+            <div\n+                data-testid=\"view-options-parent-container\"\n+                style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n+            >\n+                <ViewOptionsInput viewState={[view, setView]} />\n+            </div>\n+\n+            {(view === ViewOptions.CHARACTER_LIST_VIEW) ? (\n+                <div data-testid=\"characters-container\">\n+                    <strong role=\"title\"> Starwars Universe </strong>\n+                    <div data-testid=\"characters-table-wrapper\">\n+                        <Table\n+                            title=\"Character List\"\n+                            columns={cols}\n+                            rows={tableData.results}\n+                            page={page}\n+                            urlState={[url, setURL]}\n+                            tableState={[tableData, setTableData]}\n+                            searchState={[search, setSearch]}\n+                            rowOnClickHandler={(rowData: ICharacter) => {\n+                                navigate('/characterDetails', {state: rowData});\n+                            }}\n+                        />\n+                    </div>\n+                    <div data-testid=\"characters-table-pagination-wrapper\">\n+                        <TablePagination\n+                            rows={tableData.results}\n+                            previous={previous}\n+                            next={next}\n+                            setURL={setURL}\n+                            page={page}\n+                            count={tableData.count}\n+                        />\n+                    </div>\n+                </div>\n+            ): (\n+                <div data-testid=\"favorites-container\">\n+                    <Favorites favoritesState={[favorites, setFavorites]} />\n+                </div>\n+            )}\n+        </div>\n+    );\n+}\n+\n+export default App;"
        },
        {
            "sha": "fe265d6a2718e7d69c8eecb6012157e188acfc64",
            "filename": "src/CharacterDetails.css",
            "status": "added",
            "additions": 11,
            "deletions": 0,
            "changes": 11,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FCharacterDetails.css",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FCharacterDetails.css",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FCharacterDetails.css?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,11 @@\n+h2 {\n+    text-align: center;\n+}\n+\n+[data-testid=\"character-details-container\"]{\n+    display: flex;\n+    flex-direction: column;\n+    align-items: center;\n+    justify-content: center;\n+    min-height: 100vh;\n+}"
        },
        {
            "sha": "f245bc128863ba5c12285c321d8687e4d437dea7",
            "filename": "src/CharacterDetails.test.tsx",
            "status": "added",
            "additions": 195,
            "deletions": 0,
            "changes": 195,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FCharacterDetails.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FCharacterDetails.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FCharacterDetails.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,195 @@\n+import React from 'react';\n+import {render, screen, fireEvent} from '@testing-library/react';\n+import CharacterDetails, {Heading} from './CharacterDetails';\n+import {BrowserRouter, useNavigate} from \"react-router-dom\";\n+\n+describe('Testing Heading component', () => {\n+    test('Heading is rendered correctly with given test id attribute', () => {\n+        render(<Heading dataTestid=\"test-heading\" text=\"Test Heading\" />);\n+        expect(screen.getByTestId(\"test-heading\")).toBeVisible();\n+    });\n+\n+    test('Heading text is rendered correctly', () => {\n+        render(<Heading dataTestid=\"test-heading\" text=\"Test Heading\" />);\n+        expect(screen.getByText(\"Test Heading\")).toBeVisible();\n+    });\n+});\n+\n+jest.mock(\"react-router-dom\", () => ({\n+    ...jest.requireActual(\"react-router-dom\"),\n+    useNavigate: () => jest.fn(),\n+    useLocation: () => ({\n+        state: {\n+            \"name\": \"Luke Skywalker\",\n+            \"height\": \"172\",\n+            \"mass\": \"77\",\n+            \"hair_color\": \"blond\",\n+            \"skin_color\": \"fair\",\n+            \"eye_color\": \"blue\",\n+            \"birth_year\": \"19BBY\",\n+            \"gender\": \"male\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/2/\",\n+                \"https://swapi.dev/api/films/3/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [],\n+            \"vehicles\": [\n+                \"https://swapi.dev/api/vehicles/14/\",\n+                \"https://swapi.dev/api/vehicles/30/\"\n+            ],\n+            \"starships\": [\n+                \"https://swapi.dev/api/starships/12/\",\n+                \"https://swapi.dev/api/starships/22/\"\n+            ],\n+            \"created\": \"2014-12-09T13:50:51.644000Z\",\n+            \"edited\": \"2014-12-20T21:17:56.891000Z\",\n+            \"url\": \"https://swapi.dev/api/people/1/\"\n+        }\n+    })\n+}));\n+\n+describe('Character details Testing', () => {\n+    beforeEach(() => {\n+        render(\n+            <BrowserRouter>\n+                <CharacterDetails favoritesState={[{favoritesNamesSet: new Set(), favoritesList: []}, jest.fn()]} />\n+            </BrowserRouter>\n+        );\n+    });\n+\n+    test('renders character details container', () => {\n+        expect(screen.getByTestId('character-details-container')).toBeVisible();\n+    });\n+\n+    test('renders home navigator button', () => {\n+        expect(screen.getByTestId('home-nav-button')).toBeVisible();\n+    });\n+\n+    test('renders character details heading', () => {\n+        expect(screen.getByTestId('character-details-heading')).toBeVisible();\n+    });\n+\n+    test('renders character details films heading', () => {\n+        expect(screen.getByTestId('films-heading')).toBeVisible();\n+    });\n+\n+    test('renders character details starships heading', () => {\n+        expect(screen.getByTestId('starships-heading')).toBeVisible();\n+    });\n+\n+    test('renders character details content', () => {\n+        expect(screen.getByTestId('character-details-content')).toBeVisible();\n+    });\n+\n+    test('renders character details list', () => {\n+        expect(screen.getByTestId('character-details-list')).toBeVisible();\n+    });\n+\n+    test('renders character details', () => {\n+        expect(screen.getByText('Name: Luke Skywalker')).toBeInTheDocument();\n+        expect(screen.getByText('Hair color: blond')).toBeInTheDocument();\n+        expect(screen.getByText('Eye color: blue')).toBeInTheDocument();\n+        expect(screen.getByText('Gender: male')).toBeInTheDocument();\n+        expect(screen.getByTestId('character-details-planet-fetchable')).toBeInTheDocument();\n+    });\n+\n+    test('renders character details - films content', () => {\n+        expect(screen.getByTestId('character-details-films-content')).toBeVisible();\n+    });\n+\n+    test('renders character details - films list', () => {\n+        expect(screen.getByTestId('character-details-films-list')).toBeVisible();\n+    });\n+\n+    test('renders character details - films list item', () => {\n+        expect(screen.getAllByTestId(\"character-details-films-item\")).toHaveLength(4);\n+    });\n+\n+    test('renders character details - starships content', () => {\n+        expect(screen.getByTestId('character-details-starships-content')).toBeVisible();\n+    });\n+\n+    test('renders character details - starships list', () => {\n+        expect(screen.getByTestId('character-details-starships-list')).toBeVisible();\n+    });\n+\n+    test('renders character details - starships list item', () => {\n+        expect(screen.getAllByTestId(\"character-details-starships-item\")).toHaveLength(2);\n+    });\n+});\n+\n+describe('Character Details Favorites testing', () => {\n+    test('Renders Add to Favorites button if the character is not already in favorites', () => {\n+        const setFavoritesMock = jest.fn();\n+        render(\n+            <BrowserRouter>\n+                <CharacterDetails favoritesState={[{favoritesNamesSet: new Set(), favoritesList: []}, setFavoritesMock]} />\n+            </BrowserRouter>\n+        );\n+\n+        expect(screen.getByTestId('characters-add-to-favorites-button')).toBeVisible();\n+    });\n+\n+    test('Clicking on Add to Favorites adds to favorites list', () => {\n+        const setFavoritesMock = jest.fn();\n+        render(\n+            <BrowserRouter>\n+                <CharacterDetails favoritesState={[{favoritesNamesSet: new Set(), favoritesList: []}, setFavoritesMock]} />\n+            </BrowserRouter>\n+        );\n+\n+        fireEvent.click(screen.getByTestId(\"characters-add-to-favorites-button\"));\n+        expect(setFavoritesMock).toBeCalledTimes(1);\n+    });\n+\n+    test('renders Favorited if the character is already added to Favorites', () => {\n+        render(\n+            <BrowserRouter>\n+                <CharacterDetails\n+                    favoritesState={[\n+                        {\n+                            favoritesNamesSet: new Set([\"Luke Skywalker\"]),\n+                            favoritesList: [\n+                                {\n+                                    \"name\": \"Luke Skywalker\",\n+                                    \"height\": \"172\",\n+                                    \"mass\": \"77\",\n+                                    \"hair_color\": \"blond\",\n+                                    \"skin_color\": \"fair\",\n+                                    \"eye_color\": \"blue\",\n+                                    \"birth_year\": \"19BBY\",\n+                                    \"gender\": \"male\",\n+                                    \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+                                    \"films\": [\n+                                        \"https://swapi.dev/api/films/1/\",\n+                                        \"https://swapi.dev/api/films/2/\",\n+                                        \"https://swapi.dev/api/films/3/\",\n+                                        \"https://swapi.dev/api/films/6/\"\n+                                    ],\n+                                    \"species\": [],\n+                                    \"vehicles\": [\n+                                        \"https://swapi.dev/api/vehicles/14/\",\n+                                        \"https://swapi.dev/api/vehicles/30/\"\n+                                    ],\n+                                    \"starships\": [\n+                                        \"https://swapi.dev/api/starships/12/\",\n+                                        \"https://swapi.dev/api/starships/22/\"\n+                                    ],\n+                                    \"created\": \"2014-12-09T13:50:51.644000Z\",\n+                                    \"edited\": \"2014-12-20T21:17:56.891000Z\",\n+                                    \"url\": \"https://swapi.dev/api/people/1/\"\n+                                }\n+                            ]\n+                        }, jest.fn()\n+                    ]}\n+                />\n+            </BrowserRouter>\n+        );\n+\n+        expect(screen.getByTestId('favorited-text')).toBeVisible();\n+        expect(screen.getByText(\"Favorited!\")).toBeVisible();\n+    });\n+});"
        },
        {
            "sha": "cdfdf6ded404681da2260e81113c7f59eaa6df9c",
            "filename": "src/CharacterDetails.tsx",
            "status": "added",
            "additions": 101,
            "deletions": 0,
            "changes": 101,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FCharacterDetails.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FCharacterDetails.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FCharacterDetails.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,101 @@\n+import React from 'react';\n+import {useLocation, useNavigate} from 'react-router-dom';\n+import Button from \"@mui/material/Button\";\n+import \"./CharacterDetails.css\";\n+import {ICharacter} from './App';\n+import FetchableListItem from './FetchableItem';\n+import {IFavoritesState} from \"./Router\";\n+\n+interface IHeadingProps {\n+    dataTestid: string;\n+    text: string;\n+};\n+\n+export const Heading = ({ dataTestid, text }: IHeadingProps) => (\n+    <h2 data-testid={dataTestid}>\n+        {text}\n+    </h2>\n+);\n+\n+interface ICharacterDetailsProps {\n+    favoritesState: [IFavoritesState, React.Dispatch<React.SetStateAction<IFavoritesState>>];\n+}\n+\n+export default (props: ICharacterDetailsProps) => {\n+    // console.log('props', props);\n+    const navigate = useNavigate();\n+    const [favorites, setFavorites] = props.favoritesState;\n+    const location = useLocation();\n+    const state = location.state as ICharacter;\n+    const { name, hair_color, eye_color, gender, homeworld, films, starships } = state;\n+    // console.log(state);\n+\n+    function addToFavoritesHandler(value: any) {\n+        // @ts-ignore\n+        const existingFavoritesNamesSet = [...favorites.favoritesNamesSet];\n+        setFavorites({\n+            favoritesNamesSet: new Set([existingFavoritesNamesSet, value.name]),\n+            favoritesList: [...favorites.favoritesList, value]\n+        });\n+    }\n+\n+    return (\n+        <div data-testid=\"character-details-container\">\n+            <Heading dataTestid=\"character-details-heading\" text=\"Character Details\" />\n+            <button data-testid=\"home-nav-button\" onClick={() => navigate('/')}>\n+                Home Page\n+            </button>\n+            {\n+                (!favorites.favoritesNamesSet.has(name)) ? (\n+                    <Button\n+                        variant=\"contained\"\n+                        color=\"secondary\"\n+                        data-testid=\"characters-add-to-favorites-button\"\n+                        onClick={() => {\n+                            addToFavoritesHandler(state);\n+                        }}\n+                    >\n+                        Add to Favorites\n+                    </Button>\n+                ) : (\n+                    <strong data-testid=\"favorited-text\">Favorited!</strong>\n+                )\n+            }\n+            <span data-testid=\"character-details-content\">\n+                <ul data-testid=\"character-details-list\">\n+                    <li>Name: {name}</li>\n+                    <li>Hair color: {hair_color}</li>\n+                    <li>Eye color: {eye_color}</li>\n+                    <li>Gender: {gender}</li>\n+                    <li data-testid=\"character-details-planet-fetchable\">\n+                        <FetchableListItem url={homeworld} property=\"name\" prefix=\"Home Planet: \" />\n+                    </li>\n+                </ul>\n+            </span>\n+            <Heading dataTestid=\"films-heading\" text=\"Films\" />\n+            <span data-testid=\"character-details-films-content\">\n+                <ul data-testid=\"character-details-films-list\">\n+                    {\n+                        films.map((film: string) => (\n+                            <li data-testid=\"character-details-films-item\">\n+                                <FetchableListItem url={film} property=\"title\" />\n+                            </li>\n+                        ))\n+                    }\n+                </ul>\n+            </span>\n+            <Heading dataTestid=\"starships-heading\" text=\"Starships\" />\n+            <span data-testid=\"character-details-starships-content\">\n+                <ul data-testid=\"character-details-starships-list\">\n+                    {\n+                        starships.map((starship: string) => (\n+                            <li data-testid=\"character-details-starships-item\">\n+                                <FetchableListItem url={starship} property=\"name\" />\n+                            </li>\n+                        ))\n+                    }\n+                </ul>\n+            </span>\n+        </div>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "81bd467030666ed34ef86c4baa28bbce1c89bea3",
            "filename": "src/Favorites.test.tsx",
            "status": "added",
            "additions": 57,
            "deletions": 0,
            "changes": 57,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FFavorites.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FFavorites.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FFavorites.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,57 @@\n+import {render, screen, act, fireEvent} from \"@testing-library/react\";\n+import Favorites from \"./Favorites\";\n+import {FAV_CHAR2, FAV_CHAR1} from \"./testResponse\";\n+\n+describe('Favorites list Testing - rendering', () => {\n+    beforeEach(() => {\n+        render(\n+            <Favorites\n+                favoritesState={[{favoritesNamesSet: new Set(), favoritesList: []}, jest.fn()]}\n+            />\n+        );\n+    });\n+\n+    test('Favorites table container is rendered', () => {\n+        expect(screen.getByTestId(\"favorites-table-container\")).toBeVisible();\n+    });\n+\n+    test('Favorites table title is rendered', () => {\n+        expect(screen.getByTestId(\"favorites-title\")).toBeVisible();\n+    });\n+\n+    test('Favorites table is rendered', () => {\n+        expect(screen.getByTestId(\"favorites-table\")).toBeVisible();\n+    });\n+\n+    test('Favorites table header is rendered', () => {\n+        expect(screen.getByTestId(\"favorites-table-header\")).toBeVisible();\n+    });\n+\n+    test('Favorites table body is rendered', () => {\n+        expect(screen.getByTestId(\"favorites-table-body\")).toBeVisible();\n+    });\n+});\n+\n+describe('Favorites list Testing - behavior', () => {\n+    test('Unfavorites buttons and its click behavior are working correctly', async () => {\n+        const setFavoritesMock = jest.fn();\n+        await act(async () => {\n+            render(\n+                <Favorites\n+                    favoritesState={[\n+                        {\n+                            favoritesNamesSet: new Set([FAV_CHAR1.name, FAV_CHAR2.name]),\n+                            favoritesList: [FAV_CHAR1, FAV_CHAR2]\n+                        },\n+                        setFavoritesMock\n+                    ]}\n+                />\n+            );\n+        });\n+        expect(screen.getAllByTestId(\"unfavorite-button\")).toHaveLength(2);\n+        fireEvent.click(screen.getAllByTestId(\"unfavorite-button\")[0]);\n+        expect(setFavoritesMock).toHaveBeenCalledTimes(1);\n+        fireEvent.click(screen.getAllByTestId(\"unfavorite-button\")[1]);\n+        expect(setFavoritesMock).toHaveBeenCalledTimes(2);\n+    })\n+});\n\\ No newline at end of file"
        },
        {
            "sha": "c4a72ce31e14ad476c66d07b7b647e573689f85f",
            "filename": "src/Favorites.tsx",
            "status": "added",
            "additions": 110,
            "deletions": 0,
            "changes": 110,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FFavorites.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FFavorites.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FFavorites.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,110 @@\n+import React from 'react';\n+import Button from '@mui/material/Button';\n+import DeleteIcon from '@mui/icons-material/Delete';\n+import {IFavoritesState} from './Router';\n+import TableHeader from \"./Table/TableHeader\";\n+import TableBody from \"./Table/TableBody\";\n+import {cols} from './App';\n+\n+interface IFavoritesProps {\n+    favoritesState: [IFavoritesState, React.Dispatch<React.SetStateAction<IFavoritesState>>]\n+}\n+\n+export const enum FavoritesType {\n+    Unfavorite = \"Unfavorite\"\n+}\n+\n+export default ({ favoritesState }: IFavoritesProps) => {\n+    const [favorites, setFavorites] = favoritesState;\n+    const columns = [\n+        { field: FavoritesType.Unfavorite, headerName: 'UnFavorite' },\n+        ...cols\n+    ];\n+\n+    return (\n+        <div data-testid=\"favorites-table-container\">\n+            <strong data-testid=\"favorites-title\"> Favorites List </strong>\n+            <table data-testid=\"favorites-table\">\n+                <div data-testid=\"favorites-table-header\">\n+                    <TableHeader columns={columns} />\n+                </div>\n+\n+                <div data-testid=\"favorites-table-body\">\n+                    <TableBody\n+                        columns={columns}\n+                        rows={\n+                            favorites.favoritesList\n+                                .map(favorite => {\n+                                    return {\n+                                        [FavoritesType.Unfavorite]: (\n+                                            <>\n+                                                <Button\n+                                                    data-testid=\"unfavorite-button\"\n+                                                    variant=\"outlined\"\n+                                                    startIcon={<DeleteIcon />}\n+                                                    onClick={() => {\n+                                                        // @ts-ignore\n+                                                        favorites.favoritesNamesSet.delete(favorite.name);\n+                                                        setFavorites({\n+                                                            favoritesNamesSet: favorites.favoritesNamesSet,\n+                                                            favoritesList: favorites.favoritesList\n+                                                                .filter(item => item.name !== favorite.name)\n+                                                        });\n+                                                    }}\n+                                                >\n+                                                    Remove from Favorites\n+                                                </Button>\n+                                            </>\n+                                        ),\n+                                        ...favorite\n+                                    };\n+                                })\n+                        }\n+                    />\n+                </div>\n+\n+                {/*<tbody data-testid=\"characters-table-body\">*/}\n+                {/*{*/}\n+                {/*    favorites.favoritesList.map((row, i) => (*/}\n+                {/*        <tr*/}\n+                {/*            data-testid=\"characters-table-body-row\"*/}\n+                {/*            key={i}*/}\n+                {/*        >*/}\n+                {/*            {*/}\n+                {/*                columns.map((column, j) => {*/}\n+                {/*                        return (*/}\n+                {/*                            <td*/}\n+                {/*                                key={j}*/}\n+                {/*                                data-testid=\"characters-table-body-cell\"*/}\n+                {/*                            >*/}\n+                {/*                                {*/}\n+                {/*                                    (column.field !== FavoritesType.Unfavorite) ? (*/}\n+                {/*                                        row[column.field]*/}\n+                {/*                                    ): (*/}\n+                {/*                                        <button*/}\n+                {/*                                            onClick={() => {*/}\n+                {/*                                                // @ts-ignore*/}\n+                {/*                                                favorites.favoritesNamesSet.delete(row.name);*/}\n+                {/*                                                setFavorites({*/}\n+                {/*                                                    favoritesNamesSet: favorites.favoritesNamesSet,*/}\n+                {/*                                                    favoritesList: favorites.favoritesList*/}\n+                {/*                                                        .filter(item => item.name !== row.name)*/}\n+                {/*                                                });*/}\n+                {/*                                            }}*/}\n+                {/*                                        >*/}\n+                {/*                                            Remove from Favorite*/}\n+                {/*                                        </button>*/}\n+                {/*                                    )*/}\n+                {/*                                }*/}\n+                {/*                            </td>*/}\n+                {/*                        );*/}\n+                {/*                })*/}\n+                {/*            }*/}\n+                {/*        </tr>*/}\n+                {/*    ))*/}\n+                {/*}*/}\n+                {/*</tbody>*/}\n+            </table>\n+        </div>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "497bf846059b5720d9fb179f0e7e58ae2dfd9f27",
            "filename": "src/FetchableItem.test.tsx",
            "status": "added",
            "additions": 85,
            "deletions": 0,
            "changes": 85,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FFetchableItem.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FFetchableItem.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FFetchableItem.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,85 @@\n+import {render, screen, act} from \"@testing-library/react\";\n+import FetchableListItem from \"./FetchableItem\";\n+import {PLANET_RESPONSE, FILM_RESPONSE, STARSHIP_RESPONSE} from './testResponse';\n+\n+describe('Character details Testing', () => {\n+    let originalFetch: any;\n+\n+    beforeEach(() => {\n+        originalFetch = (global as any).fetch;\n+    });\n+\n+    afterEach(() => {\n+        (global as any).fetch = originalFetch;\n+    });\n+\n+    test('renders fetchable item container and loading text', () => {\n+        const url = \"https://swapi.dev/api/planets/1/\";\n+        render(\n+            <FetchableListItem\n+                url={url}\n+                property=\"name\"\n+            />\n+        );\n+        expect(screen.getByTestId('list-item-fetch')).toBeVisible();\n+        expect(screen.getByText(`Loading this URL ${url}...`)).toBeVisible();\n+    });\n+\n+    test('Planet API - fetch api is called with given url and rendered with prefix and response', async () => {\n+        const URL = \"https://swapi.dev/api/planets/1/\";\n+        const mRes = { json: jest.fn().mockResolvedValueOnce(PLANET_RESPONSE) };\n+        const mockedFetch = jest.fn().mockResolvedValueOnce(mRes as any);\n+        (global as any).fetch = mockedFetch;\n+\n+        await act(async () => {\n+            render(\n+                <FetchableListItem\n+                    url={URL}\n+                    property=\"name\"\n+                    prefix=\"Home Planet: \"\n+                />\n+            );\n+        });\n+\n+        expect(mockedFetch).toBeCalledTimes(1);\n+        expect(mockedFetch).toBeCalledWith(URL);\n+        expect(mRes.json).toBeCalledTimes(1);\n+        expect(screen.getByText(\"Home Planet: \" + PLANET_RESPONSE.name)).toBeVisible();\n+    });\n+\n+    test('Films API - fetch api is called with given url and rendered with response', async () => {\n+        const URL = \"https://swapi.dev/api/films/6/\";\n+        const mRes = { json: jest.fn().mockResolvedValueOnce(FILM_RESPONSE) };\n+        const mockedFetch = jest.fn().mockResolvedValueOnce(mRes as any);\n+        (global as any).fetch = mockedFetch;\n+\n+        await act(async () => {\n+            render(\n+                <FetchableListItem url={URL} property=\"title\" />\n+            );\n+        });\n+\n+        expect(mockedFetch).toBeCalledTimes(1);\n+        expect(mockedFetch).toBeCalledWith(URL);\n+        expect(mRes.json).toBeCalledTimes(1);\n+        expect(screen.getByText(FILM_RESPONSE.title)).toBeVisible();\n+    });\n+\n+    test('startship API - fetch api is called with given url and rendered with response', async () => {\n+        const URL = \"https://swapi.dev/api/starships/22/\";\n+        const mRes = { json: jest.fn().mockResolvedValueOnce(STARSHIP_RESPONSE) };\n+        const mockedFetch = jest.fn().mockResolvedValueOnce(mRes as any);\n+        (global as any).fetch = mockedFetch;\n+\n+        await act(async () => {\n+            render(\n+                <FetchableListItem url={URL} property=\"name\" />\n+            );\n+        });\n+\n+        expect(mockedFetch).toBeCalledTimes(1);\n+        expect(mockedFetch).toBeCalledWith(URL);\n+        expect(mRes.json).toBeCalledTimes(1);\n+        expect(screen.getByText(STARSHIP_RESPONSE.name)).toBeVisible();\n+    });\n+});\n\\ No newline at end of file"
        },
        {
            "sha": "0134c509665b80a1130052a5a1b9321a98caac17",
            "filename": "src/FetchableItem.tsx",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FFetchableItem.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FFetchableItem.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FFetchableItem.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,33 @@\n+import React, {useEffect, useState} from 'react';\n+\n+interface IFetchableListItemProps {\n+    url: string;\n+    property: string;\n+    prefix?: string;\n+}\n+\n+export default  ({ url, property, prefix = \"\" }: IFetchableListItemProps) => {\n+    interface IFetchData {\n+        [property: string]: string;\n+    }\n+\n+    const [fetchedData, setFetchedData] = useState<IFetchData | null>(null);\n+    // console.log('***url', url);\n+\n+    useEffect(() => {\n+        setFetchedData(null);\n+        fetch(url)\n+            .then(data => data.json())\n+            .then(info => setFetchedData(info));\n+    }, [url]);\n+\n+    return (\n+        <span data-testid=\"list-item-fetch\">\n+            {\n+                (fetchedData) ? (\n+                    prefix + fetchedData[property]\n+                ) : (`Loading this URL ${url}...`)\n+            }\n+        </span>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "e218782941dcff10d0e31747a3f013c929b8acb6",
            "filename": "src/Router.tsx",
            "status": "added",
            "additions": 38,
            "deletions": 0,
            "changes": 38,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FRouter.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FRouter.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FRouter.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,38 @@\n+import React, {useState} from \"react\";\n+import { Routes, Route, Link } from \"react-router-dom\";\n+import App, {ICharacter, ViewOptions} from './App';\n+import CharacterDetails from './CharacterDetails';\n+import Favorites from './Favorites';\n+\n+export interface IFavoritesState {\n+    favoritesNamesSet: Set<string>;\n+    favoritesList: Array<ICharacter>;\n+}\n+\n+function Router() {\n+    const [favorites, setFavorites] = useState<IFavoritesState>({ favoritesNamesSet: new Set(), favoritesList: [] });\n+    const [view, setView] = useState<ViewOptions>(ViewOptions.CHARACTER_LIST_VIEW);\n+\n+    return (\n+        <div className=\"App\">\n+            <Routes>\n+                <Route\n+                   path=\"/\"\n+                   element={\n+                        <App\n+                            favoritesState={[favorites, setFavorites]}\n+                            viewState={[view, setView]}\n+                        />\n+                    }\n+                />\n+\n+                <Route\n+                    path=\"/characterDetails\"\n+                    element={<CharacterDetails favoritesState={[favorites, setFavorites]} />}\n+                />\n+            </Routes>\n+        </div>\n+    );\n+}\n+\n+export default Router;\n\\ No newline at end of file"
        },
        {
            "sha": "719c431f29a8b8ef977036de9d1dab18fe37ce22",
            "filename": "src/Table/Table.css",
            "status": "added",
            "additions": 31,
            "deletions": 0,
            "changes": 31,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTable.css",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTable.css",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTable%2FTable.css?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,31 @@\n+table {\n+    font-family: arial, sans-serif;\n+    border-collapse: collapse;\n+    width: 100%;\n+}\n+\n+td, th {\n+    border: 1px solid #dddddd;\n+    text-align: left;\n+    padding: 8px;\n+}\n+\n+tr:nth-child(even) {\n+    background-color: #dddddd;\n+}\n+\n+button {\n+    margin: 0.25rem !important;\n+}\n+\n+span {\n+    margin: 0.5rem !important;\n+}\n+\n+.table-search-bar-container {\n+    width: 100%;\n+    display: flex;\n+    alignItems: flex-end;\n+    justifyContent: space-around;\n+    margin: 0.5rem\n+}\n\\ No newline at end of file"
        },
        {
            "sha": "367f254dbb84d5d28def36bc76dc065da5fa922e",
            "filename": "src/Table/Table.test.tsx",
            "status": "added",
            "additions": 59,
            "deletions": 0,
            "changes": 59,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTable.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTable.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTable%2FTable.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,59 @@\n+import React from 'react';\n+import { render, screen } from '@testing-library/react';\n+import Table from \"./Table\";\n+import { CHARACTER_RESPONSE_PAGE_1 } from '../testResponse';\n+import { IProps } from './Table';\n+\n+const mockSetURLState = jest.fn();\n+const mockSetTableState = jest.fn();\n+const mockSetSearchState = jest.fn();\n+const title = \"SW Characters\";\n+const props: IProps = {\n+    title: 'SW Characters',\n+    columns: [],\n+    rows: CHARACTER_RESPONSE_PAGE_1.results,\n+    page: 1,\n+    urlState: ['', mockSetURLState],\n+    tableState: [CHARACTER_RESPONSE_PAGE_1, mockSetTableState],\n+    searchState: ['test', mockSetSearchState]\n+};\n+\n+describe('', () => {\n+    beforeEach(() => {\n+        const {\n+            title,\n+            columns, rows,\n+            page,\n+            urlState,\n+            tableState,\n+            searchState\n+        } = props;\n+        render(\n+            <Table\n+                title={title} columns={columns} rows={rows} page={page}\n+                urlState={urlState} tableState={tableState}\n+                searchState={searchState}\n+            />\n+        );\n+    });\n+\n+    test('renders table container', () => {\n+        expect(screen.getByTestId(\"table-container\")).toBeVisible();\n+    });\n+\n+    test('renders table search bar container', () => {\n+        expect(screen.getByTestId(\"table-search-bar-container\")).toBeVisible();\n+    });\n+\n+    test('renders table title', () => {\n+        expect(screen.getByText(title)).toBeVisible();\n+    });\n+\n+    test('renders table search bar wrapper with search input', () => {\n+        expect(screen.getByTestId(\"table-search-bar-wrapper\")).toBeVisible();\n+    });\n+\n+    test('renders table element', () => {\n+        expect(screen.getByTestId('characters-table')).toBeVisible();\n+    });\n+});\n\\ No newline at end of file"
        },
        {
            "sha": "5d216388c1fb4627d953fe0073ab0a56adc8ac53",
            "filename": "src/Table/Table.tsx",
            "status": "added",
            "additions": 51,
            "deletions": 0,
            "changes": 51,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTable.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTable.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTable%2FTable.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,51 @@\n+import React from 'react';\n+import TableHeader from './TableHeader';\n+import TableBody from './TableBody';\n+import {ITableColumn, ICharacter, ICharactersResponse} from '../App';\n+import TableSearchBar from './TableSearchBar';\n+import './Table.css';\n+\n+export interface IProps {\n+    title: string;\n+    columns: ITableColumn[];\n+    rows: ICharacter[];\n+    page: number;\n+    urlState: [string, React.Dispatch<React.SetStateAction<string>>],\n+    tableState: [ICharactersResponse, React.Dispatch<React.SetStateAction<ICharactersResponse>>];\n+    searchState?: [string, React.Dispatch<React.SetStateAction<string>>];\n+    rowOnClickHandler?: ((rowData: ICharacter) => void) | null;\n+}\n+\n+export default (props: IProps) => {\n+    const {\n+        title,\n+        columns, rows,\n+        tableState,\n+        searchState,\n+        rowOnClickHandler = null\n+    } = props;\n+\n+    const [, setTableData] = tableState;\n+\n+    return (\n+        <div data-testid=\"table-container\" style={{ border: '2px solid gray' }}>\n+            <div className=\"table-search-bar-container\" data-testid=\"table-search-bar-container\">\n+                <strong style={{ alignSelf: 'center' }}> {title} </strong>\n+                {\n+                    (searchState && searchState.length) ? (\n+                        <div className=\"table-search-bar-wrapper\" data-testid=\"table-search-bar-wrapper\">\n+                            <TableSearchBar\n+                                searchState={searchState}\n+                                setTableData={setTableData}\n+                            />\n+                        </div>\n+                    ): (<div />)\n+                }\n+            </div>\n+            <table data-testid=\"characters-table\">\n+                <TableHeader columns={columns} />\n+                <TableBody columns={columns} rows={rows} rowOnClickHandler={rowOnClickHandler} />\n+            </table>\n+        </div>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "ff8b9db203afb62dcd01614e0a5f7b7f1be8a7a4",
            "filename": "src/Table/TableBody.test.tsx",
            "status": "added",
            "additions": 115,
            "deletions": 0,
            "changes": 115,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableBody.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableBody.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTable%2FTableBody.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,115 @@\n+import React from 'react';\n+import { render, screen, fireEvent } from '@testing-library/react';\n+import { CHARACTER_RESPONSE_PAGE_1, FAV_CHAR2, FAV_CHAR1 } from '../testResponse';\n+import TableBody from './TableBody';\n+import {cols} from '../App';\n+import Button from \"@mui/material/Button\";\n+import DeleteIcon from \"@mui/icons-material/Delete\";\n+import {FavoritesType} from \"../Favorites\";\n+\n+describe('Table Body Testing - characters table', () => {\n+    test('renders tbody', () => {\n+        render(<TableBody rows={CHARACTER_RESPONSE_PAGE_1.results} columns={cols} />);\n+        expect(screen.getByTestId('table-body')).toBeVisible();\n+    });\n+\n+    test('renders all given rows', () => {\n+        render(<TableBody rows={CHARACTER_RESPONSE_PAGE_1.results} columns={cols} />);\n+        const list = screen.getAllByTestId('table-body-row');\n+        expect(list.length).toBe(CHARACTER_RESPONSE_PAGE_1.results.length)\n+    });\n+\n+    test('renders all given cells with intended values', () => {\n+        render(<TableBody rows={CHARACTER_RESPONSE_PAGE_1.results} columns={cols} />);\n+        const list = screen.getAllByTestId('table-body-cell');\n+        const listNames = list.map(item => item.textContent);\n+        const tableCellValues = [];\n+\n+        for (const row of CHARACTER_RESPONSE_PAGE_1.results) {\n+            for (const column of cols) {\n+                tableCellValues.push(row[column.field]);\n+            }\n+        }\n+\n+        expect(listNames.sort()).toEqual(tableCellValues.sort());\n+        expect(list.length).toBe(CHARACTER_RESPONSE_PAGE_1.results.length * cols.length)\n+    });\n+\n+    test('row click is working properly', () => {\n+        const rowOnClickHandlerMock = jest.fn();\n+        render(\n+            <TableBody\n+                rows={CHARACTER_RESPONSE_PAGE_1.results} columns={cols}\n+                rowOnClickHandler={rowOnClickHandlerMock}\n+            />\n+        );\n+        const rows = screen.getAllByTestId('table-body-row');\n+\n+        rows.forEach((row, i) => {\n+            fireEvent.click(row);\n+            expect(rowOnClickHandlerMock).toHaveBeenCalledWith(CHARACTER_RESPONSE_PAGE_1.results[i]);\n+        });\n+    })\n+});\n+\n+describe('Table Body Testing - favorites table', () => {\n+    let setFavoritesMock: any;\n+    beforeEach(() => {\n+        setFavoritesMock = jest.fn();\n+        const favorites = {\n+            favoritesNamesSet: new Set([FAV_CHAR1.name, FAV_CHAR2.name]),\n+            favoritesList: [FAV_CHAR1, FAV_CHAR2]\n+        };\n+        render(\n+            <TableBody\n+                columns={[{ field: FavoritesType.Unfavorite, headerName: 'UnFavorite' }, ...cols]}\n+                rows={\n+                    favorites.favoritesList\n+                        .map(favorite => {\n+                            return {\n+                                [FavoritesType.Unfavorite]: (\n+                                    <>\n+                                        <Button\n+                                            variant=\"outlined\"\n+                                            startIcon={<DeleteIcon />}\n+                                            onClick={() => {\n+                                                favorites.favoritesNamesSet.delete(favorite.name);\n+                                                setFavoritesMock();\n+                                            }}\n+                                        >\n+                                            Remove from Favorites\n+                                        </Button>\n+                                    </>\n+                                ),\n+                                ...favorite\n+                            };\n+                        })\n+                }\n+            />\n+        );\n+    });\n+\n+    test('renders tbody', () => {\n+        expect(screen.getByTestId('table-body')).toBeVisible();\n+    });\n+\n+    test('renders all given rows', () => {\n+        const list = screen.getAllByTestId('table-body-row');\n+        expect(list.length).toBe(2)\n+    });\n+\n+    test('renders all given cells with intended values', () => {\n+        const list = screen.getAllByTestId('table-body-cell');\n+        const tableCellValues = [];\n+        const columns = [{ field: FavoritesType.Unfavorite, headerName: 'UnFavorite' }, ...cols];\n+\n+        for (const row of [FAV_CHAR1, FAV_CHAR2]) {\n+            for (const column of columns) {\n+                // @ts-ignore\n+                tableCellValues.push(row[column.field]);\n+            }\n+        }\n+        expect(list.length).toBe([FAV_CHAR1, FAV_CHAR2].length * columns.length)\n+    });\n+});\n+"
        },
        {
            "sha": "80da053834adb45252a4d2317922f5fdf8f982a9",
            "filename": "src/Table/TableBody.tsx",
            "status": "added",
            "additions": 56,
            "deletions": 0,
            "changes": 56,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableBody.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableBody.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTable%2FTableBody.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,56 @@\n+import React from 'react';\n+import {ICharacter, ITableColumn} from '../App';\n+import {FavoritesType} from '../Favorites';\n+import FetchableItem from '../FetchableItem';\n+\n+interface IFavorite {\n+    [FavoritesType.Unfavorite]?: JSX.Element\n+}\n+\n+interface ITableRows extends ICharacter, IFavorite {\n+}\n+\n+interface ITableBodyProps {\n+    rows: ITableRows[];\n+    columns: (ITableColumn | {field: FavoritesType, headerName: string})[];\n+    rowOnClickHandler?: null | ((rowData: ICharacter) => void);\n+}\n+\n+export default ({ rows, columns, rowOnClickHandler = null }: ITableBodyProps) => {\n+    // console.log('rows', rows);\n+    return (\n+        <tbody data-testid=\"table-body\">\n+            {\n+                rows.map((row, i) => (\n+                    <tr\n+                        data-testid=\"table-body-row\"\n+                        key={i}\n+                        onClick={() => {\n+                            if (rowOnClickHandler) rowOnClickHandler(row);\n+                        }}\n+                    >\n+                        {\n+                            columns.map((column, j) => {\n+                                if (\"isFetchable\" in column && column.isFetchable && typeof row[column.field] === \"string\")\n+                                    return (\n+                                        <td key={j}>\n+                                            <FetchableItem url={row[column.field].toString()} property=\"name\" />\n+                                        </td>\n+                                    );\n+                                else\n+                                    return (\n+                                        <td\n+                                            key={j}\n+                                            data-testid=\"table-body-cell\"\n+                                        >\n+                                            {row[column.field]}\n+                                        </td>\n+                                    );\n+                            })\n+                        }\n+                    </tr>\n+                ))\n+            }\n+        </tbody>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "5ba269df05d4e7a87b2dcd6a9b41cd1f94c1bac7",
            "filename": "src/Table/TableHeader.test.tsx",
            "status": "added",
            "additions": 23,
            "deletions": 0,
            "changes": 23,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableHeader.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableHeader.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTable%2FTableHeader.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,23 @@\n+import React from 'react';\n+import { render, screen } from '@testing-library/react';\n+import TableHeader from './TableHeader';\n+import {cols} from '../App';\n+\n+describe('Table Header Testing', () => {\n+    test('renders thead', () => {\n+        render(<TableHeader columns={cols} />);\n+        expect(screen.getByTestId('characters-table-head')).toBeVisible();\n+    });\n+\n+    test('renders tr for table headers', () => {\n+        render(<TableHeader columns={cols} />);\n+        expect(screen.getByTestId('characters-table-header-row')).toBeVisible();\n+    });\n+\n+    test('renders all given columns', () => {\n+        render(<TableHeader columns={cols} />);\n+        const list = screen.getAllByTestId('characters-table-column');\n+        expect(cols.length).toBe(list.length)\n+    });\n+});\n+"
        },
        {
            "sha": "9e5efbca216d9a13bcf550bc7477e3f316e3bfed",
            "filename": "src/Table/TableHeader.tsx",
            "status": "added",
            "additions": 25,
            "deletions": 0,
            "changes": 25,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableHeader.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableHeader.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTable%2FTableHeader.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,25 @@\n+import React from 'react';\n+\n+interface ITableHeaderColumn {\n+    field: string;\n+    headerName: string;\n+    isFetchable?: boolean;\n+};\n+\n+interface ITableHeaderProps {\n+    columns: ITableHeaderColumn[];\n+}\n+\n+export default ({ columns }: ITableHeaderProps) => {\n+    return (\n+        <thead data-testid=\"characters-table-head\">\n+            <tr data-testid=\"characters-table-header-row\">\n+                {\n+                    columns.map((column, i) => (\n+                        <th data-testid=\"characters-table-column\" key={i}>{column.headerName}</th>\n+                    ))\n+                }\n+            </tr>\n+        </thead>\n+    );\n+}\n\\ No newline at end of file"
        },
        {
            "sha": "8428c6d498b3d33a0502db433a6868d94fd966fa",
            "filename": "src/Table/TableSearchBar.test.tsx",
            "status": "added",
            "additions": 76,
            "deletions": 0,
            "changes": 76,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableSearchBar.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableSearchBar.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTable%2FTableSearchBar.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,76 @@\n+import React from 'react';\n+import { render, screen, fireEvent } from '@testing-library/react';\n+import TableSearchBar, {fetchSearchData} from './TableSearchBar';\n+import {SEARCH_RESPONSE} from '../testResponse';\n+\n+describe('testing fetchSearchData', () => {\n+    let originalFetch: any;\n+\n+    beforeEach(() => {\n+        originalFetch = global.fetch;\n+        global.fetch = jest.fn(() => (\n+            Promise.resolve({\n+                json: () => Promise.resolve(SEARCH_RESPONSE),\n+            }))\n+        ) as jest.Mock;\n+    });\n+\n+    afterEach(() => {\n+        global.fetch = originalFetch;\n+    });\n+\n+    test('fetchSearchData makes fetch request with value provided', async () => {\n+        const setTableDataMock = jest.fn();\n+        await fetchSearchData('Darth', setTableDataMock);\n+        expect(fetch).toHaveBeenCalledTimes(1);\n+        expect(fetch).toHaveBeenCalledWith(`https://swapi.dev/api/people?search=Darth`);\n+    });\n+\n+    test('fetchSearchData sets tableData with the fetch response', async () => {\n+        const setTableDataMock = jest.fn();\n+        await fetchSearchData('Darth', setTableDataMock);\n+        expect(setTableDataMock).toHaveBeenCalledTimes(1);\n+        expect(setTableDataMock).toHaveBeenCalledWith(SEARCH_RESPONSE);\n+    });\n+});\n+\n+describe('Table SearchBar Testing', () => {\n+    test('renders search icon', () => {\n+        const setSearchStateMock = jest.fn(), setTableData = jest.fn();\n+        render(<TableSearchBar searchState={['', setSearchStateMock]} setTableData={setTableData} />);\n+        expect(screen.getByTestId('search-icon')).toBeVisible();\n+    });\n+\n+    test('renders table search input field with given state value', () => {\n+        const setSearchStateMock = jest.fn(), setTableData = jest.fn();\n+        render(\n+            <TableSearchBar\n+                searchState={['test search', setSearchStateMock]}\n+                setTableData={setTableData}\n+            />\n+        );\n+        expect(screen.getByTestId('table-search-field')).toBeVisible();\n+        expect(screen.getByDisplayValue('test search')).toBeInTheDocument();\n+    });\n+\n+    test('table search input sets onChange value successfully', () => {\n+        const originalUseCallback = React.useCallback;\n+        const debounceLoadDataMock = jest.fn();\n+        // @ts-ignore\n+        (React.useCallback as jest.Mock) = (() => debounceLoadDataMock);\n+        const setSearchStateMock = jest.fn(), setTableDataMock = jest.fn();\n+\n+        render(\n+            <TableSearchBar\n+                searchState={['test search', setSearchStateMock]}\n+                setTableData={setTableDataMock}\n+            />\n+        );\n+\n+        fireEvent.change(screen.getByTestId('table-search-field'), {target: {value: 'Darth'}});\n+        expect(setSearchStateMock).toHaveBeenCalledWith('Darth');\n+        expect(debounceLoadDataMock).toHaveBeenCalledWith('Darth', setTableDataMock);\n+\n+        React.useCallback = originalUseCallback;\n+    });\n+});"
        },
        {
            "sha": "02ea59aadc33381b432a2b0ed8ab0e0b7b832ca1",
            "filename": "src/Table/TableSearchBar.tsx",
            "status": "added",
            "additions": 41,
            "deletions": 0,
            "changes": 41,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableSearchBar.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTable%2FTableSearchBar.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTable%2FTableSearchBar.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,41 @@\n+import React from 'react';\n+import SearchIcon from '@mui/icons-material/Search';\n+import TextField from '@mui/material/TextField';\n+import { debounce } from 'lodash';\n+import {ICharactersResponse} from \"../App\";\n+\n+interface ITableSearchBar {\n+    searchState: [string, React.Dispatch<React.SetStateAction<string>>];\n+    setTableData: React.Dispatch<React.SetStateAction<ICharactersResponse>>;\n+}\n+\n+export async function fetchSearchData(\n+    value: string, setTableData: React.Dispatch<React.SetStateAction<ICharactersResponse>>\n+) {\n+    const searchResult = await fetch(\n+        `https://swapi.dev/api/people?search=${value}`\n+    );\n+    const searchData = await searchResult.json();\n+    setTableData(searchData);\n+}\n+\n+export default ({ searchState, setTableData }: ITableSearchBar) => {\n+    const [search, setSearch] = searchState;\n+\n+    const debounceLoadData = React.useCallback(debounce(fetchSearchData, 400), []);\n+\n+    return (\n+        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n+            <SearchIcon data-testid=\"search-icon\" sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\n+            <TextField\n+                name=\"search-bar\" label=\"Search\" variant=\"standard\" fullWidth role=\"input\"\n+                inputProps={{ 'data-testid': \"table-search-field\" }}\n+                value={search}\n+                onChange={({target: { value }}) => {\n+                    setSearch(value);\n+                    debounceLoadData(value, setTableData);\n+                }}\n+            />\n+        </div>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "2f2bba8c9d71837b64237d88c5578dc1a1a1fc5b",
            "filename": "src/TablePagination/Buttons/TablePaginationFirstPage.test.tsx",
            "status": "added",
            "additions": 55,
            "deletions": 0,
            "changes": 55,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationFirstPage.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationFirstPage.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FButtons%2FTablePaginationFirstPage.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,55 @@\n+import React from 'react';\n+import { render, screen, fireEvent } from '@testing-library/react';\n+import TablePaginationFirstPage from './TablePaginationFirstPage';\n+\n+describe('Table Pagination - first page button - Render - Testing', () => {\n+    beforeEach(() => {\n+        const mockSetURLState = jest.fn();\n+        render(<TablePaginationFirstPage previous={null} setURL={mockSetURLState} />);\n+    });\n+\n+    test('renders table pagination - first page container', () => {\n+        expect(screen.getByTestId('pagination-first-page-container')).toBeVisible();\n+    });\n+\n+    test('renders table pagination - first page button', () => {\n+        expect(screen.getByTestId('characters-table-pagination-first-page-button')).toBeVisible();\n+    });\n+\n+    test('renders table pagination - first page icon', () => {\n+        expect(screen.getByTestId('characters-table-pagination-first-page-icon')).toBeVisible();\n+    });\n+});\n+\n+describe('Table Pagination - first page button behavior - Testing', () => {\n+    test('first page button is disabled in 1st page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(<TablePaginationFirstPage previous={null} setURL={mockSetURLState} />);\n+        expect(screen.getByTestId('characters-table-pagination-first-page-button')).toBeDisabled();\n+    });\n+\n+    test('first page button is not disabled in pages other than 1st page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationFirstPage\n+                previous={'https://swapi.dev/api/people/?page=7'}\n+                setURL={mockSetURLState}\n+            />\n+        );\n+        expect(screen.getByTestId('characters-table-pagination-first-page-button')).not.toBeDisabled();\n+    });\n+\n+    test('first page button on click loads first page from 6th page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationFirstPage\n+                previous={'https://swapi.dev/api/people/?page=5'}\n+                setURL={mockSetURLState}\n+            />\n+        );\n+        fireEvent.click(screen.getByTestId('characters-table-pagination-first-page-button'));\n+        expect(mockSetURLState).toHaveBeenCalledTimes(1);\n+        expect(mockSetURLState).toBeCalledWith('https://swapi.dev/api/people/?page=1');\n+    });\n+});\n+"
        },
        {
            "sha": "41c44c46cab8a8263d3481e041123ca828a80133",
            "filename": "src/TablePagination/Buttons/TablePaginationFirstPage.tsx",
            "status": "added",
            "additions": 26,
            "deletions": 0,
            "changes": 26,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationFirstPage.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationFirstPage.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FButtons%2FTablePaginationFirstPage.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,26 @@\n+import React from 'react';\n+import SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\n+import Button from \"@mui/material/Button\";\n+\n+interface IPaginationFirstPageButton {\n+    previous: null | string;\n+    setURL: React.Dispatch<React.SetStateAction<string>>;\n+}\n+\n+export default ({ previous, setURL }: IPaginationFirstPageButton) => {\n+    return (\n+        <span data-testid=\"pagination-first-page-container\">\n+            <Button\n+                variant=\"contained\"\n+                disabled={previous === null}\n+                color=\"secondary\"\n+                data-testid=\"characters-table-pagination-first-page-button\"\n+                onClick={() => {\n+                    if (previous) setURL(previous.slice(0, previous.length - 1) + '1');\n+                }}\n+            >\n+                <SkipPreviousIcon data-testid=\"characters-table-pagination-first-page-icon\" />\n+            </Button>\n+        </span>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "5ddd9ecaf7001e9d2ed5a33a398d101d61db895f",
            "filename": "src/TablePagination/Buttons/TablePaginationLastPage.test.tsx",
            "status": "added",
            "additions": 74,
            "deletions": 0,
            "changes": 74,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationLastPage.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationLastPage.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FButtons%2FTablePaginationLastPage.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,74 @@\n+import React from 'react';\n+import { render, screen, fireEvent } from '@testing-library/react';\n+import TablePaginationLastPage from './TablePaginationLastPage';\n+\n+describe('Table Pagination - last page button - Render - Testing', () => {\n+    beforeEach(() => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationLastPage\n+                next={null} setURL={mockSetURLState} rowsLength={10} count={82}\n+            />\n+        );\n+    });\n+\n+    test('renders table pagination - last page container', () => {\n+        expect(screen.getByTestId('pagination-last-page-container')).toBeVisible();\n+    });\n+\n+    test('renders table pagination - last page button', () => {\n+        expect(screen.getByTestId('characters-table-pagination-last-page-button')).toBeVisible();\n+    });\n+\n+    test('renders table pagination - last page icon', () => {\n+        expect(screen.getByTestId('characters-table-pagination-last-page-icon')).toBeVisible();\n+    });\n+});\n+\n+describe('Table Pagination - last page button behavior - Testing', () => {\n+    test('last page button is disabled in last page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationLastPage\n+                next={null} setURL={mockSetURLState} rowsLength={2} count={82}\n+            />);\n+        expect(screen.getByTestId('characters-table-pagination-last-page-button')).toBeDisabled();\n+    });\n+\n+    test('last page button is not disabled in pages other than last page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationLastPage\n+                next={'https://swapi.dev/api/people/?page=7'}\n+                setURL={mockSetURLState} rowsLength={10} count={82}\n+            />\n+        );\n+        expect(screen.getByTestId('characters-table-pagination-last-page-button')).not.toBeDisabled();\n+    });\n+\n+    test('last page button on click loads last page from 1st page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationLastPage\n+                next={'https://swapi.dev/api/people/?page=1'}\n+                setURL={mockSetURLState} rowsLength={10} count={82}\n+            />\n+        );\n+        fireEvent.click(screen.getByTestId('characters-table-pagination-last-page-button'));\n+        expect(mockSetURLState).toHaveBeenCalledTimes(1);\n+        expect(mockSetURLState).toBeCalledWith('https://swapi.dev/api/people/?page=9');\n+    });\n+\n+    test('last page button on click loads last page from 4th page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationLastPage\n+                next={'https://swapi.dev/api/people/?page=4'}\n+                setURL={mockSetURLState} rowsLength={10} count={82}\n+            />\n+        );\n+        fireEvent.click(screen.getByTestId('characters-table-pagination-last-page-button'));\n+        expect(mockSetURLState).toHaveBeenCalledTimes(1);\n+        expect(mockSetURLState).toBeCalledWith('https://swapi.dev/api/people/?page=9');\n+    });\n+});"
        },
        {
            "sha": "678210e5f0e806dc06923dee23ee5beee53b8d3e",
            "filename": "src/TablePagination/Buttons/TablePaginationLastPage.tsx",
            "status": "added",
            "additions": 30,
            "deletions": 0,
            "changes": 30,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationLastPage.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationLastPage.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FButtons%2FTablePaginationLastPage.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,30 @@\n+import React from 'react';\n+import Button from \"@mui/material/Button\";\n+import ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\n+import SkipNextIcon from \"@mui/icons-material/SkipNext\";\n+\n+interface IPaginationLastPageButton {\n+    next: null | string;\n+    setURL: React.Dispatch<React.SetStateAction<string>>;\n+    rowsLength: number;\n+    count: number;\n+}\n+\n+export default ({ next, setURL, rowsLength, count }: IPaginationLastPageButton) => {\n+    return (\n+        <span data-testid=\"pagination-last-page-container\">\n+            <Button\n+                data-testid=\"characters-table-pagination-last-page-button\"\n+                variant=\"contained\"\n+                color=\"secondary\"\n+                disabled={next === null}\n+                onClick={() => {\n+                    if (next)\n+                        setURL(next.slice(0, next.length - 1) + `${Math.ceil(count / rowsLength)}`);\n+                }}\n+            >\n+                <SkipNextIcon data-testid=\"characters-table-pagination-last-page-icon\" />\n+            </Button>\n+        </span>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "ef4bc77beac992242b6eae5df8f731e554f18972",
            "filename": "src/TablePagination/Buttons/TablePaginationNextPage.test.tsx",
            "status": "added",
            "additions": 54,
            "deletions": 0,
            "changes": 54,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationNextPage.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationNextPage.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FButtons%2FTablePaginationNextPage.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,54 @@\n+import React from 'react';\n+import { render, screen, fireEvent } from '@testing-library/react';\n+import TablePaginationNextPage from './TablePaginationNextPage';\n+\n+describe('Table Pagination - next page button - Render - Testing', () => {\n+    beforeEach(() => {\n+        const mockSetURLState = jest.fn();\n+        render(<TablePaginationNextPage next={null} setURL={mockSetURLState} />);\n+    });\n+\n+    test('renders table pagination - next page container', () => {\n+        expect(screen.getByTestId('pagination-next-page-container')).toBeVisible();\n+    });\n+\n+    test('renders table pagination - next page button', () => {\n+        expect(screen.getByTestId('characters-table-pagination-next-page-button')).toBeVisible();\n+    });\n+\n+    test('renders table pagination - next page icon', () => {\n+        expect(screen.getByTestId('characters-table-pagination-next-page-icon')).toBeVisible();\n+    });\n+});\n+\n+describe('Table Pagination - next page button behavior - Testing', () => {\n+    test('next page button is disabled in last page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(<TablePaginationNextPage next={null} setURL={mockSetURLState} />);\n+        expect(screen.getByTestId('characters-table-pagination-next-page-button')).toBeDisabled();\n+    });\n+\n+    test('next page button is not disabled in pages other than last page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationNextPage\n+                next={'https://swapi.dev/api/people/?page=7'}\n+                setURL={mockSetURLState}\n+            />\n+        );\n+        expect(screen.getByTestId('characters-table-pagination-next-page-button')).not.toBeDisabled();\n+    });\n+\n+    test('next page button on click loads next page (7th) from 6th page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationNextPage\n+                next={'https://swapi.dev/api/people/?page=7'}\n+                setURL={mockSetURLState}\n+            />\n+        );\n+        fireEvent.click(screen.getByTestId('characters-table-pagination-next-page-button'));\n+        expect(mockSetURLState).toHaveBeenCalledTimes(1);\n+        expect(mockSetURLState).toBeCalledWith('https://swapi.dev/api/people/?page=7');\n+    });\n+});"
        },
        {
            "sha": "174adf416fd8f7f4f6640dc13bd4c5986039be54",
            "filename": "src/TablePagination/Buttons/TablePaginationNextPage.tsx",
            "status": "added",
            "additions": 25,
            "deletions": 0,
            "changes": 25,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationNextPage.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationNextPage.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FButtons%2FTablePaginationNextPage.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,25 @@\n+import React from 'react';\n+import Button from \"@mui/material/Button\";\n+import ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\n+\n+interface IPaginationNextPageButton {\n+    next: null | string;\n+    setURL: React.Dispatch<React.SetStateAction<string>>;\n+}\n+\n+export default ({ next, setURL }: IPaginationNextPageButton) => {\n+    return (\n+        <span data-testid=\"pagination-next-page-container\">\n+            <Button\n+                data-testid=\"characters-table-pagination-next-page-button\"\n+                variant=\"contained\"\n+                disabled={next === null}\n+                onClick={() => {\n+                    if (next) setURL(next);\n+                }}\n+            >\n+                <ArrowForwardIcon data-testid=\"characters-table-pagination-next-page-icon\" />\n+            </Button>\n+        </span>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "2f3ac7d47c99122ca5f91220b31f34f113215333",
            "filename": "src/TablePagination/Buttons/TablePaginationPreviousPage.test.tsx",
            "status": "added",
            "additions": 55,
            "deletions": 0,
            "changes": 55,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationPreviousPage.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationPreviousPage.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FButtons%2FTablePaginationPreviousPage.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,55 @@\n+import React from 'react';\n+import { render, screen, fireEvent } from '@testing-library/react';\n+import TablePaginationPreviousPage from './TablePaginationPreviousPage';\n+\n+describe('Table Pagination - previous page button - Render - Testing', () => {\n+    beforeEach(() => {\n+        const mockSetURLState = jest.fn();\n+        render(<TablePaginationPreviousPage previous={null} setURL={mockSetURLState} />);\n+    });\n+\n+    test('renders table pagination - previous page container', () => {\n+        expect(screen.getByTestId('pagination-previous-page-container')).toBeVisible();\n+    });\n+\n+    test('renders table pagination - previous page button', () => {\n+        expect(screen.getByTestId('characters-table-pagination-previous-page-button')).toBeVisible();\n+    });\n+\n+    test('renders table pagination - previous page icon', () => {\n+        expect(screen.getByTestId('characters-table-pagination-previous-page-icon')).toBeVisible();\n+    });\n+});\n+\n+describe('Table Pagination - previous page button behavior - Testing', () => {\n+    test('previous page button is disabled in 1st page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(<TablePaginationPreviousPage previous={null} setURL={mockSetURLState} />);\n+        expect(screen.getByTestId('characters-table-pagination-previous-page-button')).toBeDisabled();\n+    });\n+\n+    test('previous page button is not disabled in pages other than 1st page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationPreviousPage\n+                previous={'https://swapi.dev/api/people/?page=7'}\n+                setURL={mockSetURLState}\n+            />\n+        );\n+        expect(screen.getByTestId('characters-table-pagination-previous-page-button')).not.toBeDisabled();\n+    });\n+\n+    test('previous page button on click loads previous page from 6th page', () => {\n+        const mockSetURLState = jest.fn();\n+        render(\n+            <TablePaginationPreviousPage\n+                previous={'https://swapi.dev/api/people/?page=5'}\n+                setURL={mockSetURLState}\n+            />\n+        );\n+        fireEvent.click(screen.getByTestId('characters-table-pagination-previous-page-button'));\n+        expect(mockSetURLState).toHaveBeenCalledTimes(1);\n+        expect(mockSetURLState).toBeCalledWith('https://swapi.dev/api/people/?page=5');\n+    });\n+});\n+"
        },
        {
            "sha": "3a180a37a35a64d97c20ca62f9c91524be528976",
            "filename": "src/TablePagination/Buttons/TablePaginationPreviousPage.tsx",
            "status": "added",
            "additions": 27,
            "deletions": 0,
            "changes": 27,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationPreviousPage.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FButtons%2FTablePaginationPreviousPage.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FButtons%2FTablePaginationPreviousPage.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,27 @@\n+import React from 'react';\n+import SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\n+import Button from \"@mui/material/Button\";\n+import ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n+\n+interface IPaginationPreviousPageButton {\n+    previous: null | string;\n+    setURL: React.Dispatch<React.SetStateAction<string>>;\n+}\n+\n+export default ({ previous, setURL }: IPaginationPreviousPageButton) => {\n+    return (\n+        <span data-testid=\"pagination-previous-page-container\">\n+            <Button\n+                variant=\"contained\"\n+                disabled={previous === null}\n+                color=\"primary\"\n+                data-testid=\"characters-table-pagination-previous-page-button\"\n+                onClick={() => {\n+                    if (previous) setURL(previous);\n+                }}\n+            >\n+                <ArrowBackIcon data-testid=\"characters-table-pagination-previous-page-icon\" />\n+            </Button>\n+        </span>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "66514a7148c43fbffd7131567719091692057e64",
            "filename": "src/TablePagination/TablePagination.test.tsx",
            "status": "added",
            "additions": 109,
            "deletions": 0,
            "changes": 109,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FTablePagination.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FTablePagination.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FTablePagination.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,109 @@\n+import React from 'react';\n+import { render, screen } from '@testing-library/react';\n+import { CHARACTER_RESPONSE_PAGE_1 } from '../testResponse';\n+import TablePagination from './TablePagination';\n+import {ICharacter} from '../App';\n+\n+function getTablePaginationComponent(rows: ICharacter[] = [], mockSetURLState: () => {})\n+{\n+    return (\n+        <TablePagination\n+            rows={rows}\n+            previous={CHARACTER_RESPONSE_PAGE_1.previous}\n+            next={CHARACTER_RESPONSE_PAGE_1.next}\n+            page={1}\n+            count={CHARACTER_RESPONSE_PAGE_1.count}\n+            setURL={mockSetURLState}\n+        />\n+    );\n+};\n+\n+describe('Table Pagination Testing', () => {\n+    test('renders Pagination container', () => {\n+        const mockSetURLState = jest.fn();\n+        render(getTablePaginationComponent(CHARACTER_RESPONSE_PAGE_1.results, mockSetURLState));\n+        expect(screen.getByTestId('characters-table-pagination')).toBeVisible();\n+    });\n+\n+    test('renders No Record found when row data is empty', () => {\n+        const mockSetURLState = jest.fn();\n+        render(getTablePaginationComponent([], mockSetURLState));\n+        expect(\n+            screen.getByTestId('characters-table-pagination-records-not-found-container')\n+        ).toBeVisible();\n+    });\n+\n+    describe('Rendering when row data is not empty', () => {\n+        test('renders Records found container', () => {\n+            const mockSetURLState = jest.fn();\n+            render(getTablePaginationComponent(CHARACTER_RESPONSE_PAGE_1.results, mockSetURLState));\n+            expect(\n+                screen.getByTestId('characters-table-pagination-records-found-container')\n+            ).toBeVisible();\n+        });\n+\n+    //     test('renders pagination first page button and go to first page icon', () => {\n+    //         expect(\n+    //             screen.getByTestId('characters-table-pagination-first-page-button')\n+    //         ).toBeVisible();\n+    //         expect(\n+    //             screen.getByTestId('characters-table-pagination-first-page-icon')\n+    //         ).toBeVisible();\n+    //     });\n+    //\n+    //     test('renders pagination previous page button and go to previous page icon', () => {\n+    //         expect(\n+    //             screen.getByTestId('characters-table-previous-page-button')\n+    //         ).toBeVisible();\n+    //         expect(\n+    //             screen.getByTestId('characters-table-pagination-previous-page-icon')\n+    //         ).toBeVisible();\n+    //     });\n+    //\n+    //     test('renders pagination next page button and go to next page icon', () => {\n+    //         expect(\n+    //             screen.getByTestId('characters-table-pagination-next-page-button')\n+    //         ).toBeVisible();\n+    //         expect(\n+    //             screen.getByTestId('characters-table-pagination-next-page-icon')\n+    //         ).toBeVisible();\n+    //     });\n+    //\n+    //     test('renders pagination last page button and go to last page icon', () => {\n+    //         expect(\n+    //             screen.getByTestId('characters-table-pagination-last-page-button')\n+    //         ).toBeVisible();\n+    //         expect(\n+    //             screen.getByTestId('characters-table-pagination-last-page-icon')\n+    //         ).toBeVisible();\n+    //     });\n+    });\n+\n+    // test('renders tbody', () => {\n+    //     render(<TableBody rows={CHARACTER_RESPONSE_PAGE_1.results} columns={cols} />);\n+    //     expect(screen.getByTestId('characters-table-body')).toBeVisible();\n+    // });\n+\n+    // test('renders all given rows', () => {\n+    //     render(<TableBody rows={CHARACTER_RESPONSE_PAGE_1.results} columns={cols} />);\n+    //     const list = screen.getAllByTestId('characters-table-body-row');\n+    //     expect(list.length).toBe(CHARACTER_RESPONSE_PAGE_1.results.length)\n+    // });\n+    //\n+    // test('renders all given cells with intended values', () => {\n+    //     render(<TableBody rows={CHARACTER_RESPONSE_PAGE_1.results} columns={cols} />);\n+    //     const list = screen.getAllByTestId('characters-table-body-cell');\n+    //     const listNames = list.map(item => item.textContent);\n+    //     const tableCellValues = [];\n+    //\n+    //     for (const row of CHARACTER_RESPONSE_PAGE_1.results) {\n+    //         for (const column of cols) {\n+    //             tableCellValues.push(row[column.field]);\n+    //         }\n+    //     }\n+    //\n+    //     expect(listNames.sort()).toEqual(tableCellValues.sort());\n+    //     expect(list.length).toBe(CHARACTER_RESPONSE_PAGE_1.results.length * cols.length)\n+    // });\n+});\n+"
        },
        {
            "sha": "81b2ecfb00478d025f5e69757323cce537302067",
            "filename": "src/TablePagination/TablePagination.tsx",
            "status": "added",
            "additions": 44,
            "deletions": 0,
            "changes": 44,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FTablePagination.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FTablePagination.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FTablePagination.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,44 @@\n+import React from 'react';\n+import {ICharacter} from \"../App\";\n+import TablePaginationCurrentPage from './TablePaginationCurrentPage';\n+import TablePaginationFirstPage from './Buttons/TablePaginationFirstPage';\n+import TablePaginationPreviousPage from './Buttons/TablePaginationPreviousPage';\n+import TablePaginationNextPage from './Buttons/TablePaginationNextPage';\n+import TablePaginationLastPage from './Buttons/TablePaginationLastPage';\n+\n+interface ITablePaginationProps {\n+    rows: ICharacter[];\n+    previous: string | null;\n+    next: string | null;\n+    setURL: React.Dispatch<React.SetStateAction<string>>;\n+    page: number;\n+    count: number;\n+}\n+\n+export default ({ rows = [], previous, next, setURL, page, count }: ITablePaginationProps) => {\n+    return (\n+        <div data-testid=\"characters-table-pagination\">\n+            {\n+                (rows.length) ? (\n+                    <div data-testid=\"characters-table-pagination-records-found-container\">\n+                        <TablePaginationFirstPage previous={previous} setURL={setURL} />\n+                        <TablePaginationPreviousPage previous={previous} setURL={setURL} />\n+\n+                        <TablePaginationCurrentPage\n+                            page={page} currentpageRowsLength={rows.length} count={count}\n+                        />\n+\n+                        <TablePaginationNextPage next={next} setURL={setURL} />\n+                        <TablePaginationLastPage\n+                            next={next} setURL={setURL} rowsLength={rows.length} count={count}\n+                        />\n+                    </div>\n+                ) : (\n+                    <div data-testid=\"characters-table-pagination-records-not-found-container\">\n+                        No Record found\n+                    </div>\n+                )\n+            }\n+        </div>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "72659d1e765c4e2c004e3c5b8d3e2919eac4f7a9",
            "filename": "src/TablePagination/TablePaginationCurrentPage.test.tsx",
            "status": "added",
            "additions": 27,
            "deletions": 0,
            "changes": 27,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FTablePaginationCurrentPage.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FTablePaginationCurrentPage.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FTablePaginationCurrentPage.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,27 @@\n+import React from 'react';\n+import { render, screen } from '@testing-library/react';\n+import TablePaginationCurrentPage from './TablePaginationCurrentPage';\n+\n+describe('Table Pagination - current page - Testing', () => {\n+    test('renders table pagination - current page container', () => {\n+        render(<TablePaginationCurrentPage page={1} currentpageRowsLength={10} count={82} />);\n+        expect(screen.getByTestId('table-pagination-current-page-container')).toBeVisible();\n+        expect(screen.getByText('1 - 10 of 82')).toBeInTheDocument();\n+    });\n+\n+    test('renders table pagination - page 1 - text is rendered correctly', () => {\n+        render(<TablePaginationCurrentPage page={1} currentpageRowsLength={10} count={82} />);\n+        expect(screen.getByText('1 - 10 of 82')).toBeInTheDocument();\n+    });\n+\n+    test('renders table pagination - last page - text is rendered correctly', () => {\n+        render(<TablePaginationCurrentPage page={9} currentpageRowsLength={2} count={82} />);\n+        expect(screen.getByText('81 - 82 of 82')).toBeInTheDocument();\n+    });\n+\n+    test('renders table pagination - 2nd page - text is rendered correctly', () => {\n+        render(<TablePaginationCurrentPage page={2} currentpageRowsLength={10} count={82} />);\n+        expect(screen.getByText('11 - 20 of 82')).toBeInTheDocument();\n+    });\n+});\n+"
        },
        {
            "sha": "2c0315ba9162b0eac98e37cbac9a88799eeff070",
            "filename": "src/TablePagination/TablePaginationCurrentPage.tsx",
            "status": "added",
            "additions": 15,
            "deletions": 0,
            "changes": 15,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FTablePaginationCurrentPage.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FTablePagination%2FTablePaginationCurrentPage.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FTablePagination%2FTablePaginationCurrentPage.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,15 @@\n+import React from 'react';\n+\n+interface ITablePaginationCurrentPageProps {\n+    page: number;\n+    currentpageRowsLength: number;\n+    count: number;\n+};\n+\n+export default ({ page, currentpageRowsLength, count }: ITablePaginationCurrentPageProps) => {\n+    return (\n+        <span data-testid=\"table-pagination-current-page-container\">\n+            {(page - 1) * 10 + 1} - {(page - 1) * 10 + currentpageRowsLength} of {count}\n+        </span>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "e8406e2e7b41bc2470d4750a7b8988a5fdbe0195",
            "filename": "src/ViewOptions.test.tsx",
            "status": "added",
            "additions": 47,
            "deletions": 0,
            "changes": 47,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FViewOptions.test.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FViewOptions.test.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FViewOptions.test.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,47 @@\n+import React from 'react';\n+import {render, screen, fireEvent} from '@testing-library/react';\n+import ViewOptionsInput from './ViewOptionsInput';\n+import {ViewOptions} from './App';\n+\n+describe('View options components rendering test', () => {\n+   beforeEach(() => {\n+       render (<ViewOptionsInput viewState={[ViewOptions.CHARACTER_LIST_VIEW, jest.fn()]} />);\n+   });\n+\n+   test('renders View Options Container', () => {\n+       expect(screen.getByTestId(\"view-options-container\")).toBeVisible();\n+   });\n+\n+   test('render characters view radio button and label', () => {\n+       expect(screen.getByTestId(\"view-options-characters-view-radio\")).toBeVisible();\n+       expect(screen.getByTestId(\"characters-view-label\")).toBeVisible();\n+   });\n+\n+    test('render favorites view radio button and label', () => {\n+        expect(screen.getByTestId(\"view-options-favorites-view-radio\")).toBeVisible();\n+        expect(screen.getByTestId(\"favorites-view-label\")).toBeVisible();\n+    });\n+});\n+\n+describe('View options behavior testing', () => {\n+    test('Characters radio is checked by default', () => {\n+        render (<ViewOptionsInput viewState={[ViewOptions.CHARACTER_LIST_VIEW, jest.fn()]} />);\n+        expect(screen.getByTestId(\"view-options-characters-view-radio\")).toBeChecked();\n+    });\n+\n+    test('Clicking on Favorites radio makes it checked', () => {\n+        const setViewMock = jest.fn();\n+        render (<ViewOptionsInput viewState={[ViewOptions.CHARACTER_LIST_VIEW, setViewMock]} />);\n+        fireEvent.click(screen.getByTestId(\"view-options-favorites-view-radio\"));\n+        expect(setViewMock).toBeCalledTimes(1);\n+        expect(setViewMock).toBeCalledWith(ViewOptions.FAVORITES_VIEW);\n+    });\n+\n+    test('Clicking on Characters radio makes it checked', () => {\n+        const setViewMock = jest.fn();\n+        render (<ViewOptionsInput viewState={[ViewOptions.FAVORITES_VIEW, setViewMock]} />);\n+        fireEvent.click(screen.getByTestId(\"view-options-characters-view-radio\"));\n+        expect(setViewMock).toBeCalledTimes(1);\n+        expect(setViewMock).toBeCalledWith(ViewOptions.CHARACTER_LIST_VIEW);\n+    });\n+});\n\\ No newline at end of file"
        },
        {
            "sha": "e7c97511996dde95cc96f0f6f58ac66a96b1accf",
            "filename": "src/ViewOptionsInput.tsx",
            "status": "added",
            "additions": 50,
            "deletions": 0,
            "changes": 50,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FViewOptionsInput.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FViewOptionsInput.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FViewOptionsInput.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,50 @@\n+import React from 'react';\n+import {ViewOptions} from './App';\n+\n+interface IViewOptionsProps {\n+    viewState: [ViewOptions, React.Dispatch<React.SetStateAction<ViewOptions>>];\n+}\n+\n+export default ({ viewState }: IViewOptionsProps) => {\n+    const [view, setView] = viewState;\n+\n+    const onValueChangeHandler = (event: any) => {\n+        if (view !== event.target.value) {\n+            setView(event.target.value);\n+        }\n+    }\n+\n+    return (\n+        <div\n+            data-testid=\"view-options-container\"\n+            style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n+        >\n+            <input\n+                type=\"radio\" id=\"CHARACTER_LIST_VIEW\" name=\"CHARACTER_LIST_VIEW\"\n+                data-testid=\"view-options-characters-view-radio\"\n+                value={ViewOptions.CHARACTER_LIST_VIEW}\n+                checked={view === ViewOptions.CHARACTER_LIST_VIEW}\n+                onChange={onValueChangeHandler}\n+            />\n+            <label\n+                htmlFor=\"CHARACTER_LIST_VIEW\"\n+                data-testid=\"characters-view-label\"\n+            >\n+                Character List\n+            </label><br />\n+            <input\n+                type=\"radio\" id=\"FAVORITES_VIEW\" name=\"FAVORITES_VIEW\"\n+                data-testid=\"view-options-favorites-view-radio\"\n+                value={ViewOptions.FAVORITES_VIEW}\n+                checked={view === ViewOptions.FAVORITES_VIEW}\n+                onChange={onValueChangeHandler}\n+            />\n+            <label\n+                htmlFor=\"FAVORITES_VIEW\"\n+                data-testid=\"favorites-view-label\"\n+            >\n+                Favorites\n+            </label><br />\n+        </div>\n+    );\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "ec2585e8c0bb8188184ed1e0703c4c8f2a8419b0",
            "filename": "src/index.css",
            "status": "added",
            "additions": 13,
            "deletions": 0,
            "changes": 13,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2Findex.css",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2Findex.css",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2Findex.css?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,13 @@\n+body {\n+  margin: 0;\n+  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n+    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n+    sans-serif;\n+  -webkit-font-smoothing: antialiased;\n+  -moz-osx-font-smoothing: grayscale;\n+}\n+\n+code {\n+  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n+    monospace;\n+}"
        },
        {
            "sha": "a7f557acee5a2ca65d636526e9f1877e5a457c3f",
            "filename": "src/index.tsx",
            "status": "added",
            "additions": 22,
            "deletions": 0,
            "changes": 22,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2Findex.tsx",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2Findex.tsx",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2Findex.tsx?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,22 @@\n+import React from 'react';\n+import ReactDOM from 'react-dom/client';\n+import './index.css';\n+import Router from './Router';\n+import reportWebVitals from './reportWebVitals';\n+import { BrowserRouter } from \"react-router-dom\";\n+\n+const root = ReactDOM.createRoot(\n+  document.getElementById('root') as HTMLElement\n+);\n+root.render(\n+  <React.StrictMode>\n+      <BrowserRouter>\n+        <Router />\n+      </BrowserRouter>\n+  </React.StrictMode>\n+);\n+\n+// If you want to start measuring performance in your app, pass a function\n+// to log results (for example: reportWebVitals(console.log))\n+// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n+reportWebVitals();"
        },
        {
            "sha": "9dfc1c058cebbef8b891c5062be6f31033d7d186",
            "filename": "src/logo.svg",
            "status": "added",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2Flogo.svg",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2Flogo.svg",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2Flogo.svg?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/><path d=\"M520.5 78.1z\"/></g></svg>\n\\ No newline at end of file"
        },
        {
            "sha": "6431bc5fc6b2c932dfe5d0418fc667b86c18b9fc",
            "filename": "src/react-app-env.d.ts",
            "status": "added",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2Freact-app-env.d.ts",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2Freact-app-env.d.ts",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2Freact-app-env.d.ts?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1 @@\n+/// <reference types=\"react-scripts\" />"
        },
        {
            "sha": "49a2a16e0fbc7636ee16bf907257a5282b856493",
            "filename": "src/reportWebVitals.ts",
            "status": "added",
            "additions": 15,
            "deletions": 0,
            "changes": 15,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FreportWebVitals.ts",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FreportWebVitals.ts",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FreportWebVitals.ts?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,15 @@\n+import { ReportHandler } from 'web-vitals';\n+\n+const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n+  if (onPerfEntry && onPerfEntry instanceof Function) {\n+    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n+      getCLS(onPerfEntry);\n+      getFID(onPerfEntry);\n+      getFCP(onPerfEntry);\n+      getLCP(onPerfEntry);\n+      getTTFB(onPerfEntry);\n+    });\n+  }\n+};\n+\n+export default reportWebVitals;"
        },
        {
            "sha": "8f2609b7b3e0e3897ab3bcaad13caf6876e48699",
            "filename": "src/setupTests.ts",
            "status": "added",
            "additions": 5,
            "deletions": 0,
            "changes": 5,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FsetupTests.ts",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FsetupTests.ts",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FsetupTests.ts?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,5 @@\n+// jest-dom adds custom jest matchers for asserting on DOM nodes.\n+// allows you to do things like:\n+// expect(element).toHaveTextContent(/react/i)\n+// learn more: https://github.com/testing-library/jest-dom\n+import '@testing-library/jest-dom';"
        },
        {
            "sha": "ff7211d9ae8feeaf36d730a18617da1253826bd1",
            "filename": "src/testResponse/index.ts",
            "status": "added",
            "additions": 556,
            "deletions": 0,
            "changes": 556,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FtestResponse%2Findex.ts",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/src%2FtestResponse%2Findex.ts",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/src%2FtestResponse%2Findex.ts?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,556 @@\n+import {ICharactersResponse} from '../App';\n+\n+export const FAV_CHAR2 = {\n+    \"name\": \"Luke Skywalker\",\n+    \"height\": \"172\",\n+    \"mass\": \"77\",\n+    \"hair_color\": \"blond\",\n+    \"skin_color\": \"fair\",\n+    \"eye_color\": \"blue\",\n+    \"birth_year\": \"19BBY\",\n+    \"gender\": \"male\",\n+    \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+    \"films\": [\n+        \"https://swapi.dev/api/films/1/\",\n+        \"https://swapi.dev/api/films/2/\",\n+        \"https://swapi.dev/api/films/3/\",\n+        \"https://swapi.dev/api/films/6/\"\n+    ],\n+    \"species\": [],\n+    \"vehicles\": [\n+        \"https://swapi.dev/api/vehicles/14/\",\n+        \"https://swapi.dev/api/vehicles/30/\"\n+    ],\n+    \"starships\": [\n+        \"https://swapi.dev/api/starships/12/\",\n+        \"https://swapi.dev/api/starships/22/\"\n+    ],\n+    \"created\": \"2014-12-09T13:50:51.644000Z\",\n+    \"edited\": \"2014-12-20T21:17:56.891000Z\",\n+    \"url\": \"https://swapi.dev/api/people/1/\"\n+};\n+\n+export const FAV_CHAR1 = {\n+    \"name\": \"C-3PO\",\n+    \"height\": \"167\",\n+    \"mass\": \"75\",\n+    \"hair_color\": \"n/a\",\n+    \"skin_color\": \"gold\",\n+    \"eye_color\": \"yellow\",\n+    \"birth_year\": \"112BBY\",\n+    \"gender\": \"n/a\",\n+    \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+    \"films\": [\n+        \"https://swapi.dev/api/films/1/\",\n+        \"https://swapi.dev/api/films/2/\",\n+        \"https://swapi.dev/api/films/3/\",\n+        \"https://swapi.dev/api/films/4/\",\n+        \"https://swapi.dev/api/films/5/\",\n+        \"https://swapi.dev/api/films/6/\"\n+    ],\n+    \"species\": [\n+        \"https://swapi.dev/api/species/2/\"\n+    ],\n+    \"vehicles\": [],\n+    \"starships\": [],\n+    \"created\": \"2014-12-10T15:10:51.357000Z\",\n+    \"edited\": \"2014-12-20T21:17:50.309000Z\",\n+    \"url\": \"https://swapi.dev/api/people/2/\"\n+};\n+\n+export const STARSHIP_RESPONSE = {\n+    \"name\": \"Imperial shuttle\",\n+    \"model\": \"Lambda-class T-4a shuttle\",\n+    \"manufacturer\": \"Sienar Fleet Systems\",\n+    \"cost_in_credits\": \"240000\",\n+    \"length\": \"20\",\n+    \"max_atmosphering_speed\": \"850\",\n+    \"crew\": \"6\",\n+    \"passengers\": \"20\",\n+    \"cargo_capacity\": \"80000\",\n+    \"consumables\": \"2 months\",\n+    \"hyperdrive_rating\": \"1.0\",\n+    \"MGLT\": \"50\",\n+    \"starship_class\": \"Armed government transport\",\n+    \"pilots\": [\n+        \"https://swapi.dev/api/people/1/\",\n+        \"https://swapi.dev/api/people/13/\",\n+        \"https://swapi.dev/api/people/14/\"\n+    ],\n+    \"films\": [\n+        \"https://swapi.dev/api/films/2/\",\n+        \"https://swapi.dev/api/films/3/\"\n+    ],\n+    \"created\": \"2014-12-15T13:04:47.235000Z\",\n+    \"edited\": \"2014-12-20T21:23:49.900000Z\",\n+    \"url\": \"https://swapi.dev/api/starships/22/\"\n+};\n+\n+export const FILM_RESPONSE = {\n+    \"title\": \"Revenge of the Sith\",\n+    \"episode_id\": 3,\n+    \"opening_crawl\": \"War! The Republic is crumbling\\r\\nunder attacks by the ruthless\\r\\nSith Lord, Count Dooku.\\r\\nThere are heroes on both sides.\\r\\nEvil is everywhere.\\r\\n\\r\\nIn a stunning move, the\\r\\nfiendish droid leader, General\\r\\nGrievous, has swept into the\\r\\nRepublic capital and kidnapped\\r\\nChancellor Palpatine, leader of\\r\\nthe Galactic Senate.\\r\\n\\r\\nAs the Separatist Droid Army\\r\\nattempts to flee the besieged\\r\\ncapital with their valuable\\r\\nhostage, two Jedi Knights lead a\\r\\ndesperate mission to rescue the\\r\\ncaptive Chancellor....\",\n+    \"director\": \"George Lucas\",\n+    \"producer\": \"Rick McCallum\",\n+    \"release_date\": \"2005-05-19\",\n+    \"characters\": [\n+        \"https://swapi.dev/api/people/1/\",\n+        \"https://swapi.dev/api/people/2/\",\n+        \"https://swapi.dev/api/people/3/\",\n+        \"https://swapi.dev/api/people/4/\",\n+        \"https://swapi.dev/api/people/5/\",\n+        \"https://swapi.dev/api/people/6/\",\n+        \"https://swapi.dev/api/people/7/\",\n+        \"https://swapi.dev/api/people/10/\",\n+        \"https://swapi.dev/api/people/11/\",\n+        \"https://swapi.dev/api/people/12/\",\n+        \"https://swapi.dev/api/people/13/\",\n+        \"https://swapi.dev/api/people/20/\",\n+        \"https://swapi.dev/api/people/21/\",\n+        \"https://swapi.dev/api/people/33/\",\n+        \"https://swapi.dev/api/people/35/\",\n+        \"https://swapi.dev/api/people/46/\",\n+        \"https://swapi.dev/api/people/51/\",\n+        \"https://swapi.dev/api/people/52/\",\n+        \"https://swapi.dev/api/people/53/\",\n+        \"https://swapi.dev/api/people/54/\",\n+        \"https://swapi.dev/api/people/55/\",\n+        \"https://swapi.dev/api/people/56/\",\n+        \"https://swapi.dev/api/people/58/\",\n+        \"https://swapi.dev/api/people/63/\",\n+        \"https://swapi.dev/api/people/64/\",\n+        \"https://swapi.dev/api/people/67/\",\n+        \"https://swapi.dev/api/people/68/\",\n+        \"https://swapi.dev/api/people/75/\",\n+        \"https://swapi.dev/api/people/78/\",\n+        \"https://swapi.dev/api/people/79/\",\n+        \"https://swapi.dev/api/people/80/\",\n+        \"https://swapi.dev/api/people/81/\",\n+        \"https://swapi.dev/api/people/82/\",\n+        \"https://swapi.dev/api/people/83/\"\n+    ],\n+    \"planets\": [\n+        \"https://swapi.dev/api/planets/1/\",\n+        \"https://swapi.dev/api/planets/2/\",\n+        \"https://swapi.dev/api/planets/5/\",\n+        \"https://swapi.dev/api/planets/8/\",\n+        \"https://swapi.dev/api/planets/9/\",\n+        \"https://swapi.dev/api/planets/12/\",\n+        \"https://swapi.dev/api/planets/13/\",\n+        \"https://swapi.dev/api/planets/14/\",\n+        \"https://swapi.dev/api/planets/15/\",\n+        \"https://swapi.dev/api/planets/16/\",\n+        \"https://swapi.dev/api/planets/17/\",\n+        \"https://swapi.dev/api/planets/18/\",\n+        \"https://swapi.dev/api/planets/19/\"\n+    ],\n+    \"starships\": [\n+        \"https://swapi.dev/api/starships/2/\",\n+        \"https://swapi.dev/api/starships/32/\",\n+        \"https://swapi.dev/api/starships/48/\",\n+        \"https://swapi.dev/api/starships/59/\",\n+        \"https://swapi.dev/api/starships/61/\",\n+        \"https://swapi.dev/api/starships/63/\",\n+        \"https://swapi.dev/api/starships/64/\",\n+        \"https://swapi.dev/api/starships/65/\",\n+        \"https://swapi.dev/api/starships/66/\",\n+        \"https://swapi.dev/api/starships/68/\",\n+        \"https://swapi.dev/api/starships/74/\",\n+        \"https://swapi.dev/api/starships/75/\"\n+    ],\n+    \"vehicles\": [\n+        \"https://swapi.dev/api/vehicles/33/\",\n+        \"https://swapi.dev/api/vehicles/50/\",\n+        \"https://swapi.dev/api/vehicles/53/\",\n+        \"https://swapi.dev/api/vehicles/56/\",\n+        \"https://swapi.dev/api/vehicles/60/\",\n+        \"https://swapi.dev/api/vehicles/62/\",\n+        \"https://swapi.dev/api/vehicles/67/\",\n+        \"https://swapi.dev/api/vehicles/69/\",\n+        \"https://swapi.dev/api/vehicles/70/\",\n+        \"https://swapi.dev/api/vehicles/71/\",\n+        \"https://swapi.dev/api/vehicles/72/\",\n+        \"https://swapi.dev/api/vehicles/73/\",\n+        \"https://swapi.dev/api/vehicles/76/\"\n+    ],\n+    \"species\": [\n+        \"https://swapi.dev/api/species/1/\",\n+        \"https://swapi.dev/api/species/2/\",\n+        \"https://swapi.dev/api/species/3/\",\n+        \"https://swapi.dev/api/species/6/\",\n+        \"https://swapi.dev/api/species/15/\",\n+        \"https://swapi.dev/api/species/19/\",\n+        \"https://swapi.dev/api/species/20/\",\n+        \"https://swapi.dev/api/species/23/\",\n+        \"https://swapi.dev/api/species/24/\",\n+        \"https://swapi.dev/api/species/25/\",\n+        \"https://swapi.dev/api/species/26/\",\n+        \"https://swapi.dev/api/species/27/\",\n+        \"https://swapi.dev/api/species/28/\",\n+        \"https://swapi.dev/api/species/29/\",\n+        \"https://swapi.dev/api/species/30/\",\n+        \"https://swapi.dev/api/species/33/\",\n+        \"https://swapi.dev/api/species/34/\",\n+        \"https://swapi.dev/api/species/35/\",\n+        \"https://swapi.dev/api/species/36/\",\n+        \"https://swapi.dev/api/species/37/\"\n+    ],\n+    \"created\": \"2014-12-20T18:49:38.403000Z\",\n+    \"edited\": \"2014-12-20T20:47:52.073000Z\",\n+    \"url\": \"https://swapi.dev/api/films/6/\"\n+};\n+\n+export const PLANET_RESPONSE = {\n+    \"name\": \"Tatooine\",\n+    \"rotation_period\": \"23\",\n+    \"orbital_period\": \"304\",\n+    \"diameter\": \"10465\",\n+    \"climate\": \"arid\",\n+    \"gravity\": \"1 standard\",\n+    \"terrain\": \"desert\",\n+    \"surface_water\": \"1\",\n+    \"population\": \"200000\",\n+    \"residents\": [\n+        \"https://swapi.dev/api/people/1/\",\n+        \"https://swapi.dev/api/people/2/\",\n+        \"https://swapi.dev/api/people/4/\",\n+        \"https://swapi.dev/api/people/6/\",\n+        \"https://swapi.dev/api/people/7/\",\n+        \"https://swapi.dev/api/people/8/\",\n+        \"https://swapi.dev/api/people/9/\",\n+        \"https://swapi.dev/api/people/11/\",\n+        \"https://swapi.dev/api/people/43/\",\n+        \"https://swapi.dev/api/people/62/\"\n+    ],\n+    \"films\": [\n+        \"https://swapi.dev/api/films/1/\",\n+        \"https://swapi.dev/api/films/3/\",\n+        \"https://swapi.dev/api/films/4/\",\n+        \"https://swapi.dev/api/films/5/\",\n+        \"https://swapi.dev/api/films/6/\"\n+    ],\n+    \"created\": \"2014-12-09T13:50:49.641000Z\",\n+    \"edited\": \"2014-12-20T20:58:18.411000Z\",\n+    \"url\": \"https://swapi.dev/api/planets/1/\"\n+};\n+\n+export const SEARCH_RESPONSE = {\n+    \"count\": 2,\n+    \"next\": null,\n+    \"previous\": null,\n+    \"results\": [\n+        {\n+            \"name\": \"Darth Vader\",\n+            \"height\": \"202\",\n+            \"mass\": \"136\",\n+            \"hair_color\": \"none\",\n+            \"skin_color\": \"white\",\n+            \"eye_color\": \"yellow\",\n+            \"birth_year\": \"41.9BBY\",\n+            \"gender\": \"male\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/2/\",\n+                \"https://swapi.dev/api/films/3/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [],\n+            \"vehicles\": [],\n+            \"starships\": [\n+                \"https://swapi.dev/api/starships/13/\"\n+            ],\n+            \"created\": \"2014-12-10T15:18:20.704000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.313000Z\",\n+            \"url\": \"https://swapi.dev/api/people/4/\"\n+        },\n+        {\n+            \"name\": \"Darth Maul\",\n+            \"height\": \"175\",\n+            \"mass\": \"80\",\n+            \"hair_color\": \"none\",\n+            \"skin_color\": \"red\",\n+            \"eye_color\": \"yellow\",\n+            \"birth_year\": \"54BBY\",\n+            \"gender\": \"male\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/36/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/4/\"\n+            ],\n+            \"species\": [\n+                \"https://swapi.dev/api/species/22/\"\n+            ],\n+            \"vehicles\": [\n+                \"https://swapi.dev/api/vehicles/42/\"\n+            ],\n+            \"starships\": [\n+                \"https://swapi.dev/api/starships/41/\"\n+            ],\n+            \"created\": \"2014-12-19T18:00:41.929000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.403000Z\",\n+            \"url\": \"https://swapi.dev/api/people/44/\"\n+        }\n+    ]\n+};\n+\n+export const CHARACTER_RESPONSE_PAGE_1: ICharactersResponse = {\n+    \"count\": 82,\n+    \"next\": \"https://swapi.dev/api/people/?page=2\",\n+    \"previous\": null,\n+    \"results\": [\n+        {\n+            \"name\": \"Luke Skywalker\",\n+            \"height\": \"172\",\n+            \"mass\": \"77\",\n+            \"hair_color\": \"blond\",\n+            \"skin_color\": \"fair\",\n+            \"eye_color\": \"blue\",\n+            \"birth_year\": \"19BBY\",\n+            \"gender\": \"male\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/2/\",\n+                \"https://swapi.dev/api/films/3/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [],\n+            \"vehicles\": [\n+                \"https://swapi.dev/api/vehicles/14/\",\n+                \"https://swapi.dev/api/vehicles/30/\"\n+            ],\n+            \"starships\": [\n+                \"https://swapi.dev/api/starships/12/\",\n+                \"https://swapi.dev/api/starships/22/\"\n+            ],\n+            \"created\": \"2014-12-09T13:50:51.644000Z\",\n+            \"edited\": \"2014-12-20T21:17:56.891000Z\",\n+            \"url\": \"https://swapi.dev/api/people/1/\"\n+        },\n+        {\n+            \"name\": \"C-3PO\",\n+            \"height\": \"167\",\n+            \"mass\": \"75\",\n+            \"hair_color\": \"n/a\",\n+            \"skin_color\": \"gold\",\n+            \"eye_color\": \"yellow\",\n+            \"birth_year\": \"112BBY\",\n+            \"gender\": \"n/a\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/2/\",\n+                \"https://swapi.dev/api/films/3/\",\n+                \"https://swapi.dev/api/films/4/\",\n+                \"https://swapi.dev/api/films/5/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [\n+                \"https://swapi.dev/api/species/2/\"\n+            ],\n+            \"vehicles\": [],\n+            \"starships\": [],\n+            \"created\": \"2014-12-10T15:10:51.357000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.309000Z\",\n+            \"url\": \"https://swapi.dev/api/people/2/\"\n+        },\n+        {\n+            \"name\": \"R2-D2\",\n+            \"height\": \"96\",\n+            \"mass\": \"32\",\n+            \"hair_color\": \"n/a\",\n+            \"skin_color\": \"white, blue\",\n+            \"eye_color\": \"red\",\n+            \"birth_year\": \"33BBY\",\n+            \"gender\": \"n/a\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/8/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/2/\",\n+                \"https://swapi.dev/api/films/3/\",\n+                \"https://swapi.dev/api/films/4/\",\n+                \"https://swapi.dev/api/films/5/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [\n+                \"https://swapi.dev/api/species/2/\"\n+            ],\n+            \"vehicles\": [],\n+            \"starships\": [],\n+            \"created\": \"2014-12-10T15:11:50.376000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.311000Z\",\n+            \"url\": \"https://swapi.dev/api/people/3/\"\n+        },\n+        {\n+            \"name\": \"Darth Vader\",\n+            \"height\": \"202\",\n+            \"mass\": \"136\",\n+            \"hair_color\": \"none\",\n+            \"skin_color\": \"white\",\n+            \"eye_color\": \"yellow\",\n+            \"birth_year\": \"41.9BBY\",\n+            \"gender\": \"male\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/2/\",\n+                \"https://swapi.dev/api/films/3/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [],\n+            \"vehicles\": [],\n+            \"starships\": [\n+                \"https://swapi.dev/api/starships/13/\"\n+            ],\n+            \"created\": \"2014-12-10T15:18:20.704000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.313000Z\",\n+            \"url\": \"https://swapi.dev/api/people/4/\"\n+        },\n+        {\n+            \"name\": \"Leia Organa\",\n+            \"height\": \"150\",\n+            \"mass\": \"49\",\n+            \"hair_color\": \"brown\",\n+            \"skin_color\": \"light\",\n+            \"eye_color\": \"brown\",\n+            \"birth_year\": \"19BBY\",\n+            \"gender\": \"female\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/2/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/2/\",\n+                \"https://swapi.dev/api/films/3/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [],\n+            \"vehicles\": [\n+                \"https://swapi.dev/api/vehicles/30/\"\n+            ],\n+            \"starships\": [],\n+            \"created\": \"2014-12-10T15:20:09.791000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.315000Z\",\n+            \"url\": \"https://swapi.dev/api/people/5/\"\n+        },\n+        {\n+            \"name\": \"Owen Lars\",\n+            \"height\": \"178\",\n+            \"mass\": \"120\",\n+            \"hair_color\": \"brown, grey\",\n+            \"skin_color\": \"light\",\n+            \"eye_color\": \"blue\",\n+            \"birth_year\": \"52BBY\",\n+            \"gender\": \"male\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/5/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [],\n+            \"vehicles\": [],\n+            \"starships\": [],\n+            \"created\": \"2014-12-10T15:52:14.024000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.317000Z\",\n+            \"url\": \"https://swapi.dev/api/people/6/\"\n+        },\n+        {\n+            \"name\": \"Beru Whitesun lars\",\n+            \"height\": \"165\",\n+            \"mass\": \"75\",\n+            \"hair_color\": \"brown\",\n+            \"skin_color\": \"light\",\n+            \"eye_color\": \"blue\",\n+            \"birth_year\": \"47BBY\",\n+            \"gender\": \"female\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/5/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [],\n+            \"vehicles\": [],\n+            \"starships\": [],\n+            \"created\": \"2014-12-10T15:53:41.121000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.319000Z\",\n+            \"url\": \"https://swapi.dev/api/people/7/\"\n+        },\n+        {\n+            \"name\": \"R5-D4\",\n+            \"height\": \"97\",\n+            \"mass\": \"32\",\n+            \"hair_color\": \"n/a\",\n+            \"skin_color\": \"white, red\",\n+            \"eye_color\": \"red\",\n+            \"birth_year\": \"unknown\",\n+            \"gender\": \"n/a\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\"\n+            ],\n+            \"species\": [\n+                \"https://swapi.dev/api/species/2/\"\n+            ],\n+            \"vehicles\": [],\n+            \"starships\": [],\n+            \"created\": \"2014-12-10T15:57:50.959000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.321000Z\",\n+            \"url\": \"https://swapi.dev/api/people/8/\"\n+        },\n+        {\n+            \"name\": \"Biggs Darklighter\",\n+            \"height\": \"183\",\n+            \"mass\": \"84\",\n+            \"hair_color\": \"black\",\n+            \"skin_color\": \"light\",\n+            \"eye_color\": \"brown\",\n+            \"birth_year\": \"24BBY\",\n+            \"gender\": \"male\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\"\n+            ],\n+            \"species\": [],\n+            \"vehicles\": [],\n+            \"starships\": [\n+                \"https://swapi.dev/api/starships/12/\"\n+            ],\n+            \"created\": \"2014-12-10T15:59:50.509000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.323000Z\",\n+            \"url\": \"https://swapi.dev/api/people/9/\"\n+        },\n+        {\n+            \"name\": \"Obi-Wan Kenobi\",\n+            \"height\": \"182\",\n+            \"mass\": \"77\",\n+            \"hair_color\": \"auburn, white\",\n+            \"skin_color\": \"fair\",\n+            \"eye_color\": \"blue-gray\",\n+            \"birth_year\": \"57BBY\",\n+            \"gender\": \"male\",\n+            \"homeworld\": \"https://swapi.dev/api/planets/20/\",\n+            \"films\": [\n+                \"https://swapi.dev/api/films/1/\",\n+                \"https://swapi.dev/api/films/2/\",\n+                \"https://swapi.dev/api/films/3/\",\n+                \"https://swapi.dev/api/films/4/\",\n+                \"https://swapi.dev/api/films/5/\",\n+                \"https://swapi.dev/api/films/6/\"\n+            ],\n+            \"species\": [],\n+            \"vehicles\": [\n+                \"https://swapi.dev/api/vehicles/38/\"\n+            ],\n+            \"starships\": [\n+                \"https://swapi.dev/api/starships/48/\",\n+                \"https://swapi.dev/api/starships/59/\",\n+                \"https://swapi.dev/api/starships/64/\",\n+                \"https://swapi.dev/api/starships/65/\",\n+                \"https://swapi.dev/api/starships/74/\"\n+            ],\n+            \"created\": \"2014-12-10T16:16:29.192000Z\",\n+            \"edited\": \"2014-12-20T21:17:50.325000Z\",\n+            \"url\": \"https://swapi.dev/api/people/10/\"\n+        }\n+    ]\n+};\n\\ No newline at end of file"
        },
        {
            "sha": "a273b0cfc0e965c35524e3cd0d3574cbe1ad2d0d",
            "filename": "tsconfig.json",
            "status": "added",
            "additions": 26,
            "deletions": 0,
            "changes": 26,
            "blob_url": "https://github.com/NBALAJI95/starwars-universe-app/blob/9256ec8780a8a65f32433ff05989b5ac10915ed0/tsconfig.json",
            "raw_url": "https://github.com/NBALAJI95/starwars-universe-app/raw/9256ec8780a8a65f32433ff05989b5ac10915ed0/tsconfig.json",
            "contents_url": "https://api.github.com/repos/NBALAJI95/starwars-universe-app/contents/tsconfig.json?ref=9256ec8780a8a65f32433ff05989b5ac10915ed0",
            "patch": "@@ -0,0 +1,26 @@\n+{\n+  \"compilerOptions\": {\n+    \"target\": \"es5\",\n+    \"lib\": [\n+      \"dom\",\n+      \"dom.iterable\",\n+      \"esnext\"\n+    ],\n+    \"allowJs\": true,\n+    \"skipLibCheck\": true,\n+    \"esModuleInterop\": true,\n+    \"allowSyntheticDefaultImports\": true,\n+    \"strict\": true,\n+    \"forceConsistentCasingInFileNames\": true,\n+    \"noFallthroughCasesInSwitch\": true,\n+    \"module\": \"esnext\",\n+    \"moduleResolution\": \"node\",\n+    \"resolveJsonModule\": true,\n+    \"isolatedModules\": true,\n+    \"noEmit\": true,\n+    \"jsx\": \"react-jsx\"\n+  },\n+  \"include\": [\n+    \"src\"\n+  ]\n+}"
        }
    ]
}